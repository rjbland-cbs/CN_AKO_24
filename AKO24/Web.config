<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=301879
  -->
<configuration>
	<appSettings>
		<!-- Added for migrating to MVC-->
		<add key="SurveyRoot" value="" />
		<add key="SurveyBaseRoot" value="" />
		<!-- Runtime Parameters -->
		<add key="ServerPark" value=""/>
		<add key="InstrumentId" value=""/>
		<add key="IsPreview" value=""/>
		<add key="IsTesting" value="false"/>
		<!-- Old Existing -->
		<add key="WidthAttribute" value="data-width" />
		<add key="WidthUnitAttribute" value="data-width-unit" />
		<add key="HeightAttrbiute" value="data-height" />
		<add key="HeightUnitAttrbiute" value="data-height-unit" />
		<add key="webpages:Version" value="3.0.0.0" />
		<add key="webpages:Enabled" value="false" />
		<add key="ClientValidationEnabled" value="true" />
		<add key="UnobtrusiveJavaScriptEnabled" value="true" />
		<add key="ExternalCommunicationAddress" value="http://localhost:8033" />
		<add key="ExternalCommunicationPort" value="8033" />
		<!--Needed to enable client authentication -->
		<add key="ClientCertificateStoreName" value="" />
		<add key="ClientCertificateStoreLocation" value="" />
		<add key="ClientCertificateThumbprint" value="" />
		<add key="UseLocalHost" value="false" />
		<!-- set this setting to true if the web server is a clustered server that is also data entry server -->
		<add key="UseJsonWriter" value="true" />
		<!-- set this value to false to use the JavaScriptSerializer for serializing the returned InterviewPayload  -->
		<add key="TestPageFolder" value="" />
		<!-- set this value to a valid folder for writing the returned Json  -->
		<add key="MeasurePageTimes" value="false" />
		<add key="LogMode" value="Off" />
		<!-- set this value to:
				- On: logs the Json request/response using the UseJsonWriter setting 
				- Both: logs both the Json request/response ignoring the UseJsonWriter setting 
		-->
		<add key="LogFileFormat" value=""/>
		<!-- the following keys can be used to create custom file format (case insensitive)
			{actualLayoutSetName} : actualLayoutSetName
			{instrumentId} : instrumentId
			{instrumentTitle} : instrumentTitle						
			{messageType} : Request/Response			
			{pageId} : Blaise Pageid
			{parallelName} : parallelName
			{ruleSessionId} : Unique Id in the Rule Session database						
			{timeStamp} : timestamp in format yyyyMMddHHmmssfff			
			default format: {messageType}{ruleSessionId}{pageId}{parallelName}{actualLayoutSetName}
		-->
		<add key="PrintReceiveTimeout" value="300" />
		<!-- timeout in seconds for waiting for the response of a print action -->
	</appSettings>
	<location path="api/application/upload">
		<!--!- Allow maximum request size of 100 MB for upload endpoints only. This size is specified in kilobytes. -->
		<system.web>
			<httpRuntime maxRequestLength="102400" />
		</system.web>
	</location>
	<location path="debug/api/application/upload">
		<!--!- Allow maximum request size of 100 MB for debug/../upload.  This size is specified in kilobytes. -->
		<system.web>
			<httpRuntime maxRequestLength="102400" />
		</system.web>
	</location>
	<system.web>
		<compilation targetFramework="4.7.2"></compilation>
		<!--!- Allow maximum request size of 100 MB for all url's, which is needed when a blob field is on the page and contains a file. This size is specified in kilobytes. -->
		<httpRuntime targetFramework="4.7.2" enableVersionHeader="false" maxRequestLength="102400" />
		<customErrors mode="RemoteOnly" />
	</system.web>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
				<bindingRedirect oldVersion="0.0.0.0-13.0.0.0" newVersion="13.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" culture="neutral" />
				<bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-5.2.7.0" newVersion="5.2.7.0" />
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	<system.webServer>
		<staticContent>
			<remove fileExtension=".json" />
			<mimeMap fileExtension=".json" mimeType="application/json" />
		</staticContent>
		<defaultDocument enabled="true">
			<files>
				<clear />
				<add value="default.aspx" />
			</files>
		</defaultDocument>
		<handlers>
			<remove name="ExtensionlessUrlHandler-Integrated-4.0" />
			<remove name="OPTIONSVerbHandler" />
			<remove name="TRACEVerbHandler" />
			<add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
		</handlers>
		<security>
			<requestFiltering removeServerHeader="true">
				<!-- Allow maximum request size of 100 MB. This size is specified in bytes. -->
				<requestLimits maxAllowedContentLength="104857600" />
				<verbs>
					<!-- disable TRACE and TRACK verbs to prevent spoofing of headers -->
					<add verb="TRACE" allowed="false" />
					<add verb="TRACK" allowed="false" />
				</verbs>
			</requestFiltering>
		</security>
		<httpProtocol>
			<customHeaders>
				<!-- OWASP changes -->
				<!-- Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, 
					including Cross Site Scripting (XSS) and data injection attacks. -->
				<add name="Content-Security-Policy" value="default-src 'self' https://*.virtualearth.net https://*.arcgis.com; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://*.googleapis.com https://*.arcgis.com; img-src 'self' https://*.virtualearth.net https://*.googleapis.com https://*.gstatic.com https://*.arcgis.com data:; font-src 'self' data:; frame-ancestors 'none'; connect-src 'self' https://*.googleapis.com https://*.gstatic.com data: blob:; form-action 'self'; frame-src *; object-src 'none'"/>
				<!-- The HTTP 'X-Content-Type-Options' response header prevents the browser from MIME-sniffing a response away from the declared content-type. -->
				<add name="X-Content-Type-Options" value="nosniff"/>
				<!-- Remove the "X-Powered-By" HTTP response headers to prevent leaking server information. 
					Access to such information may facilitate attackers identifying other frameworks/components your web 
					application is reliant upon and the vulnerabilities such components may be subject to.-->
				<remove name="X-Powered-By"/>
				<!-- added cache-control en pragma headers to prevent browsers from caching our application (sensitive data) -->
				<add name="cache-control" value="no-cache" />
				<add name="pragma" value="no-cache" />
				<!-- The X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be allowed to render a page in a <frame>, <iframe>, <embed> or <object>. Sites can use this to avoid click-jacking attacks, by ensuring that their content is not embedded into other sites. -->
				<add name="X-Frame-Options" value="DENY" />
			</customHeaders>
		</httpProtocol>
	</system.webServer>
	<system.diagnostics>
		<trace autoflush="true" indentsize="4">
			<listeners>
				<add name="EventLogListener" type="System.Diagnostics.EventLogTraceListener" initializeData="Blaise" />
			</listeners>
		</trace>
	</system.diagnostics>
</configuration>