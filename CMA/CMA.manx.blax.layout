<?xml version="1.0" encoding="utf-8"?>
<LayoutSpecification xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Name="CMA" Version="12" GenerateAllSections="true" GenerateClientRules="true" UseGenericPages="false">
  <Languages>
    <Language Name="EN" MappedResourceDatabaseLanguage="EN" />
  </Languages>
  <LayoutSets>
    <LayoutSet Name="Dialogs1" ResourceSetName="Dialogs" StyleName="Dialogs" RequiredStyle="false" DesignHeight="600" DesignWidth="800" ResizeMode="Auto" RouteItemsPerPage="999" RowsPerTable="999" ReceiptPageName="" IntroPageName="" ResumePageName="" AbortPageName="Default" AllowedOrientation="{Expression IF Client.Device = IPhone OR Client.Device = AndroidPhone THEN 'Portrait' ELSE 'Both' ENDIF}">
      <Parallels>
        <Parallel Name="">
          <IsGeneric>false</IsGeneric>
        </Parallel>
        <Parallel Name="dShowTheLogging" DialogHeight="800" InitialWindowState="Maximized">
          <InstanceLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dShowTheLogging.DS_mLogging">
              <Instructions>
                <TemplateInstruction TemplateName="DataView" TemplateTarget="ResponseValue" Parameters="{ParameterValues HeaderRoleName='Question';HeaderTextSource='TextOrName';OnRecordSelected='';ColumnWidths='26,300'}" />
                <TemplateInstruction TemplateName="Vertical" TemplateTarget="FieldPane" Parameters="{ParameterValues HeightStretched='True'}" PlaceholderName="DS_mLoggingFieldPaneArea" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dShowTheLogging.QuitLogging">
              <Instructions>
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Margin='3,3,3,15';Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF}}" ObjectName="" />
                <TemplateInstruction TemplateName="DialogButtons" TemplateTarget="DataValue" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Margin='5,0,15,15';Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};OnClick={Action CloseDialog()};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};ToolTipTextSource='None'}" ObjectName="OK" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Margin='5,0,5,15';Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};OnClick={Action ProcedureCall({Expression UploadLogging(1)})};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};ToolTipTextSource='None'}" ObjectName="Cancel_Synchronize" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dShowTheLogging.VersionInfo">
              <Instructions>
                <TemplateInstruction TemplateName="QuestionTextOnly" TemplateTarget="FieldPane" Parameters="{ParameterValues Margin='5'}" PlaceholderName="dShowTheLogging_VersionInfo1" />
                <TemplateInstruction TemplateName="StringTextBox" TemplateTarget="ResponseValue" Parameters="{ParameterValues Margin='3';VerticalAlignment='Top'}" />
              </Instructions>
            </RouteItemLayoutInstructions>
          </InstanceLayoutInstructions>
          <CustomPageTemplates>
            <CustomPageTemplate PageIndex="0">
              <Template DesignHeight="800">
                <Items>
                  <Grid Name="backgroundGrid" Background="{Style Background}" Width="Stretch" Height="Stretch">
                    <ExpressionReferences>
                      <StateExpressionReference />
                      <DatamodelExpressionReference />
                      <ServerVariablesExpressionReference />
                      <ClientFeaturesExpressionReference />
                      <TextProviderExpressionReference />
                      <PageExpressionReference />
                      <MappedFieldExpressionReference>
                        <ReferenceName>DS_mLogging</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>VersionInfo</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>QuitLogging</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAutoSizeBtns</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CurrentVersion</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_EN</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_NL</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                    </ExpressionReferences>
                    <Columns>
                      <Column Width="*" />
                    </Columns>
                    <Rows>
                      <Row Height="*" />
                    </Rows>
                    <Children>
                      <Grid Name="mainGrid" Background="#FFF0F0F0" Margin="{Style MainGridMargin}" Width="Stretch" Height="Stretch">
                        <Columns>
                          <Column Width="*" />
                        </Columns>
                        <Rows>
                          <Row Height="Auto" />
                          <Row Height="Auto" />
                          <Row />
                          <Row Height="*" />
                          <Row />
                          <Row />
                          <Row />
                        </Rows>
                        <Children>
                          <Grid Name="headerGrid" Background="{Style Background}" Width="Stretch">
                            <Columns>
                              <Column Width="*" />
                            </Columns>
                            <Rows>
                              <Row Height="Auto" />
                            </Rows>
                            <Children>
                              <Panel Name="headerPanel" Background="{Style TitleAreaBackground}" Margin="{Style HeaderMargin}" Width="Stretch" CornerRadius="{Style HeaderCornerRadius}">
                                <Grid Name="titleAreaGrid" Margin="5" Width="Stretch" BorderColor="#FFE6E6FA">
                                  <Columns>
                                    <Column Width="Auto" />
                                    <Column Width="*" />
                                    <Column Width="Auto" />
                                  </Columns>
                                  <Rows>
                                    <Row Height="Auto" />
                                  </Rows>
                                  <Children>
                                    <ImageControl Name="companyLogo" Margin="2" ScreenReaderText="Company logo" Source="Logo" ScreenReaderTextSource="Literal" TabIndex="-1">
                                      <ScreenReaderRichTextDefinition>
                                        <RunElements />
                                      </ScreenReaderRichTextDefinition>
                                    </ImageControl>
                                    <ParallelsArea Name="parallelsArea1" ColumnIndex="1" DesignHeight="42">
                                      <DefaultTemplates>
                                        <TemplateReference Name="DialogHeader" Kind="Parallel" />
                                      </DefaultTemplates>
                                    </ParallelsArea>
                                  </Children>
                                </Grid>
                              </Panel>
                            </Children>
                          </Grid>
                          <Grid Name="menuBarGrid" RowIndex="1" Width="Stretch" Comment="Available area for e.g. extra information, showing errors or a menubar. Can be removed if not used." BorderColor="#FFE6E6FA">
                            <Columns>
                              <Column Width="*" />
                            </Columns>
                          </Grid>
                          <Grid Name="instructionGrid" RowIndex="2" Visibility="Collapsed" Margin="5" Width="Stretch" BorderWidth="0,0,0,1">
                            <Children>
                              <Label Name="instruction" Margin="2" />
                            </Children>
                          </Grid>
                          <Panel Name="contentAreaPanel" RowIndex="3" Width="Stretch" Height="Stretch" Comment="To allow for vertical scrolling when questions don't fit on the page. Make sure all children are Auto height.&#xD;&#xA;">
                            <Grid Name="contentGrid" Margin="5,5,5,0" Width="Stretch" Height="Stretch">
                              <Columns>
                                <Column Width="*" />
                              </Columns>
                              <Rows>
                                <Row Height="*" />
                                <Row />
                              </Rows>
                              <Children>
                                <FieldPaneInstanceArea Name="DS_mLoggingFieldPaneArea" DesignWidth="730" DesignHeight="250" FieldName="dShowTheLogging.DS_mLogging">
                                  <DefaultTemplates>
                                    <TemplateReference Name="InputWithActionButton" Kind="FieldPane" Parameters="{ParameterValues ActionButtonVisibility='Collapsed'}" />
                                    <TemplateReference Name="OnlyInput" Kind="FieldPane" />
                                    <TemplateReference Name="ResultButtons" Kind="FieldPane" />
                                    <TemplateReference Name="Vertical" Kind="FieldPane" Parameters="{ParameterValues Width='Stretch'}" />
                                  </DefaultTemplates>
                                </FieldPaneInstanceArea>
                              </Children>
                            </Grid>
                          </Panel>
                          <Grid Name="grid1" RowIndex="5" Width="Stretch">
                            <Columns>
                              <Column Width="*" />
                              <Column Width="Auto" />
                            </Columns>
                            <Children>
                              <FieldPaneInstanceArea Name="dShowTheLogging_VersionInfo1" DesignHeight="100" FieldName="dShowTheLogging.VersionInfo" />
                              <FieldPaneInstanceArea Name="dShowTheLogging_QuitLogging1" ColumnIndex="1" DesignHeight="100" FieldName="dShowTheLogging.QuitLogging" />
                            </Children>
                          </Grid>
                          <Grid Name="footNoteGrid" RowIndex="6" Visibility="Collapsed" Margin="5" Width="Stretch" BorderWidth="0,1,0,0">
                            <Children>
                              <Label Name="footNote" Margin="2" />
                            </Children>
                          </Grid>
                        </Children>
                      </Grid>
                    </Children>
                  </Grid>
                </Items>
              </Template>
            </CustomPageTemplate>
          </CustomPageTemplates>
          <IsGeneric>false</IsGeneric>
        </Parallel>
        <Parallel Name="dCases" DialogHeight="620" DialogWidth="1024" InitialWindowState="Maximized">
          <InstanceLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.btnCases">
              <Instructions>
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression StartInterview()})};IsEnabled={Expression auxFinal.AnswerStatus = Empty AND auxIsDonorCase.Answerstatus = Empty};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Margin={Style ControlMargin};Visibility={Expression IF auxParentChildView.AnswerStatus = Response OR auxGroupType.AnswerStatus = EMPTY THEN IF auxIsDonorCase.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF ELSE 'Collapsed' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};HorizontalTextAlignment='Center';HorizontalAlignment='Right';Text={Expression IF auxFinal.AnswerStatus = Empty AND auxIsDonorCase.Answerstatus = Empty THEN Category.GetRoleText('Category') ELSE Category.GetRoleText('Disabled') ENDIF}}" ObjectName="Cancel_IW" />
                <TemplateInstruction TemplateName="ResultButtons" TemplateTarget="FieldPane" Parameters="{ParameterValues Margin='0';IsStretched='True';HorizontalAlignment='Center'}" />
                <TemplateInstruction TemplateName="CategoryResultButtonOK" TemplateTarget="Category" Parameters="{ParameterValues OnValueChanged={Action ProcedureCall({Expression StartInterview()})}}" ObjectName="IW" />
                <TemplateInstruction TemplateName="DialogButtons" TemplateTarget="DataValue" Parameters="{ParameterValues Margin='0,5,0,0'}" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression ProcessAttemptsAndStartDialog()});ProcedureCall({Expression UpdateTemporaryCasesFile(auxWhatCasesToShow.EnumerationValue, auxWhatSurveyToShowGUID.StringValue)})};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};IsEnabled={Expression auxIsDonorCase.AnswerStatus = Empty};Visibility={Expression IF auxGroupType.AnswerStatus = Response OR auxDoNotAllowShowingAttempts.AnswerStatus = RESPONSE THEN 'Collapsed' ELSE 'Visible' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};HorizontalTextAlignment='Center';HorizontalAlignment='Right'}" ObjectName="Cancel_Attempt" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression UpdateCaseEntry()})};IsEnabled={Expression auxFinal.AnswerStatus = Empty AND auxIsDonorCase.Answerstatus = Empty};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};HorizontalTextAlignment='Center';Text={Expression IF auxFinal.AnswerStatus = Empty AND auxIsDonorCase.Answerstatus = Empty THEN Category.GetRoleText('Category') ELSE Category.GetRoleText('Disabled') ENDIF};HorizontalAlignment='Right';Visibility={Expression IF auxGroupType.AnswerStatus = Response OR auxDoNotAllowEditCase.AnswerStatus &lt;&gt; EMPTY THEN 'Collapsed' ELSE 'Visible' ENDIF}}" ObjectName="Cancel_Update" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" ObjectName="Cancel_Note" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action AssignField('dCases.btnCases', '10', '');CloseDialog()};IsEnabled='True';Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};HorizontalAlignment='Right';Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Visibility={Expression IF auxIsNonWindows.AnswerStatus &lt;&gt; EMPTY THEN 'Collapsed' ELSE 'Visible' ENDIF};HorizontalTextAlignment='Center'}" ObjectName="Quit" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression Sync(0)});ProcedureCall({Expression UpdateTemporaryCasesFile(auxWhatCasesToShow.EnumerationValue, auxWhatSurveyToShowGUID.StringValue)})};Margin={Style ControlMargin};HorizontalAlignment='Right';Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};HorizontalTextAlignment='Center'}" ObjectName="Cancel_Synchronize" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF}}" ObjectName="" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues IsEnabled='False';Text=''}" ObjectName="Cancel_Void" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues IsEnabled={Expression auxSpawnAllowed.EnumerationValue = 1};OnClick={Action ProcedureCall({Expression SpawnCase()})};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Visibility={Expression IF auxSpawnAllowed.AnswerStatus &lt;&gt; Empty AND auxGroupType.AnswerStatus = EMPTY THEN 'Visible' ELSE 'Collapsed' ENDIF};HorizontalTextAlignment='Center';HorizontalAlignment='Right'}" ObjectName="Cancel_Spawn" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Visibility={Expression IF auxParentChildView.AnswerStatus = Response OR auxGroupType.AnswerStatus = EMPTY THEN 'Collapsed' ELSE 'Visible' ENDIF};OnClick={Action ProcedureCall({Expression SwitchToGroupView()})};IsEnabled={Expression auxGroupType.AnswerStatus = Response};HorizontalTextAlignment='Center';HorizontalAlignment='Right'}" ObjectName="Cancel_ShowGroup" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression GeoButtonClick()})};Visibility={Expression IF auxShowGeoPositionBtn.AnswerStatus = Response THEN 'Visible' ELSE 'Collapsed' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};IsEnabled={Expression auxFinal.AnswerStatus = Empty AND auxIsDonorCase.Answerstatus = Empty}}" ObjectName="Cancel_CollectGeoLoc" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Visibility={Expression IF auxDoNotAllowShowingAttempts.AnswerStatus = Empty AND auxShowAddAttemptBtn.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF}}" ObjectName="Cancel_Add" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.DS_mCases">
              <Instructions>
                <TemplateInstruction TemplateName="Vertical" TemplateTarget="FieldPane" Parameters="{ParameterValues Height='Stretch';HeightStretched='True'}" />
                <TemplateInstruction TemplateName="DataView" TemplateTarget="ResponseValue" Parameters="{ParameterValues OnRecordSelected={Action ProcedureCall({Expression UpdateCasesScreen()})};HeaderRoleName='Question';HeaderTextSource='TextOrName';FieldFilter={Expression auxFieldFilter.StringValue};ColumnNames={Expression auxFieldFilterTitles.StringValue};ColumnWidths={Expression auxFieldFilterWidths.StringValue}}" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxWhatCasesToShow">
              <Instructions>
                <TemplateInstruction TemplateName="DialogButtons" TemplateTarget="DataValue" Parameters="{ParameterValues Margin='0'}" />
                <TemplateInstruction TemplateName="ResultButtons" TemplateTarget="FieldPane" Parameters="{ParameterValues Margin='0,5,5,5';Visibility={Expression IF auxInPortraitMode.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF}}" PlaceholderName="dCases_auxWhatCasesToShow1" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Margin='3';Width={Style CMAButtonWidth};OnClick={Action AssignField('dCases.auxWhatCasesToShow', '1', '');ProcedureCall({Expression WhatCasesToShowClick(auxWhatCasesToShow.EnumerationValue, auxWhatSurveyToShowGUID.StringValue)})};Height={Style CMAButtonHeight}}" ObjectName="Noncompleted" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Margin='3';Width={Style CMAButtonWidth};OnClick={Action AssignField('dCases.auxWhatCasesToShow', '2', '');ProcedureCall({Expression WhatCasesToShowClick(auxWhatCasesToShow.EnumerationValue, auxWhatSurveyToShowGUID.StringValue)})};IsEnabled='True';VerticalAlignment='Bottom';Height={Style CMAButtonHeight}}" ObjectName="Completed" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Margin='3';Width={Style CMAButtonWidth};OnClick={Action AssignField('dCases.auxWhatCasesToShow', '0', '');ProcedureCall({Expression WhatCasesToShowClick(auxWhatCasesToShow.EnumerationValue, auxWhatSurveyToShowGUID.StringValue)})};Height={Style CMAButtonHeight}}" ObjectName="All" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Margin='3'}" ObjectName="" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxWhatSurveyToShow">
              <Instructions>
                <TemplateInstruction TemplateName="DropDownList" TemplateTarget="DataValue" Parameters="{ParameterValues OnValueChanged={Action ProcedureCall({Expression SurveyListChange()})};AutoEnter='False';WatermarkTextSource='TextOrAnswerInfo'}" />
                <TemplateInstruction TemplateName="Vertical" TemplateTarget="FieldPane" Parameters="{ParameterValues IsStretched='False';Margin='5,5,0,5';Height='Auto';Width='Auto';Visibility={Expression IF auxInPortraitMode.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF}}" PlaceholderName="dCases_auxWhatSurveyToShow1" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxStatus">
              <Instructions>
                <TemplateInstruction TemplateName="StringTextBox" TemplateTarget="ResponseValue" Parameters="{ParameterValues Margin='3,0,0,0'}" />
                <TemplateInstruction TemplateName="InputWithActionButton" TemplateTarget="FieldPane" Parameters="{ParameterValues IsStretched='True'}" PlaceholderName="auxStatusFieldPaneArea" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxLastAttempt">
              <Instructions>
                <TemplateInstruction TemplateName="StringTextBox" TemplateTarget="ResponseValue" Parameters="{ParameterValues Margin='3,0,0,0'}" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxCaseNote">
              <Instructions>
                <TemplateInstruction TemplateName="StringTextBox" TemplateTarget="ResponseValue" Parameters="{ParameterValues Margin='3,0,0,0';Height='Auto'}" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxDataGridHeaderNonCompleted">
              <Instructions>
                <TemplateInstruction TemplateName="QuestionTextOnly" TemplateTarget="FieldPane" Parameters="{ParameterValues Margin='5,5,5,0'}" PlaceholderName="dCases_auxDataGridHeaderNonCompleted1" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxDataGridHeaderCompleted">
              <Instructions>
                <TemplateInstruction TemplateName="QuestionTextOnly" TemplateTarget="FieldPane" Parameters="{ParameterValues Margin='5,5,5,0'}" PlaceholderName="dCases_auxDataGridHeaderCompleted1" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxDataGridHeaderAll">
              <Instructions>
                <TemplateInstruction TemplateName="QuestionTextOnly" TemplateTarget="FieldPane" Parameters="{ParameterValues Margin='5,5,5,0'}" PlaceholderName="dCases_auxDataGridHeaderAll1" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxFilter">
              <Instructions>
                <TemplateInstruction TemplateName="StringTextBoxDelayedWithDeleteButton" TemplateTarget="ResponseValue" Parameters="{ParameterValues OnValueChanged={Action Conditional({Expression auxUseSearchButton.AnswerStatus = Empty},{Action StopTimer('timer1');ProcedureCall({Expression TimerHandleChange()})},'')};Margin='5,5,1,5';Width='Stretch';VerticalAlignment='Top';OnClick={Action ProcedureCall({Expression ClearFilterButtonClick()})};SearchButtonVisibility={Expression IF auxUseSearchButton.AnswerStatus = Empty THEN 'Collapsed' ELSE 'Visible' ENDIF};stringTextBox_OnValueChanged={Action Conditional({Expression auxUseSearchButton.AnswerStatus = Empty},{Action StopTimer('timer1');StartTimer('timer1')},'')};searchButton_OnClick={Action ProcedureCall({Expression SearchButtonClick()})};OnGotFocus={Action ProcedureCall({Expression SearchButtonClick()})}}" />
                <TemplateInstruction TemplateName="Vertical" TemplateTarget="FieldPane" Parameters="{ParameterValues Height='Auto';Margin='5,5,10,5';IsStretched='True';fieldText_Visibility={Expression IF auxInPortraitMode.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF}}" PlaceholderName="dCases_auxFilter1" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxDetails">
              <Instructions>
                <TemplateInstruction TemplateName="QuestionTextOnly" TemplateTarget="FieldPane" Parameters="{ParameterValues Visibility={Expression IF auxCustomDetailsTable.AnswerStatus = Empty OR auxCollapseDetails.ANSWERSTATUS &lt;&gt; EMPTY THEN 'Collapsed' ELSE 'Visible' ENDIF}}" PlaceholderName="dCases_auxDetails1" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.btnStyle">
              <Instructions>
                <TemplateInstruction TemplateName="DialogButtons" TemplateTarget="DataValue" Parameters="{ParameterValues Margin='5,5,0,0'}" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" ObjectName="" />
                <TemplateInstruction TemplateName="ResultButtons" TemplateTarget="FieldPane" Parameters="{ParameterValues IsStretched='False';Margin='0';Visibility={Expression IF (btnStyle.RouteStatus = Keep OR btnStyle.RouteStatus = OffRoute) OR auxInPortraitMode.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF}}" PlaceholderName="dCases_btnStyle1" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Width={Style CMAButtonWidth};OnClick={Action ProcedureCall({Expression ChangeStyle()});SetStyle({Expression auxStyle.StringValue});ProcedureCall({Expression FillSurveyNamesArray()})};Height={Style CMAButtonHeight}}" ObjectName="Change" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.LanguageEnum">
              <Instructions>
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Height='38';Width='53';Margin='0';TextMargin='0'}" ObjectName="" />
                <TemplateInstruction TemplateName="ResultButtons" TemplateTarget="FieldPane" Parameters="{ParameterValues Margin='0'}" PlaceholderName="dCases_LanguageEnum1" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Visibility={Expression IF LanguageCount.IntegerValue &gt;= 2 THEN 'Visible' ELSE 'Collapsed' ENDIF};OnClick={Action SetLanguage({Expression LanguageID1.StringValue})};Height='38';Width='53';TextMargin='0';ToolTipTextSource='None'}" ObjectName="flag1" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Visibility={Expression IF LanguageCount.IntegerValue &gt;= 2 THEN 'Visible' ELSE 'Collapsed' ENDIF};OnClick={Action SetLanguage({Expression LanguageID2.StringValue})};Height='38';Width='53';TextMargin='0';ToolTipTextSource='None'}" ObjectName="flag2" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Visibility={Expression IF LanguageCount.IntegerValue &gt;= 3 THEN 'Visible' ELSE 'Collapsed' ENDIF};OnClick={Action SetLanguage({Expression LanguageID3.StringValue})};Height='38';Width='53';TextMargin='0';ToolTipTextSource='None'}" ObjectName="flag3" />
                <TemplateInstruction TemplateName="DialogButtons" TemplateTarget="DataValue" Parameters="{ParameterValues Margin='0'}" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxSortOn">
              <Instructions>
                <TemplateInstruction TemplateName="DropDownList" TemplateTarget="DataValue" Parameters="{ParameterValues OnValueChanged={Action ProcedureCall({Expression SortCases()})};WatermarkTextSource='TextOrAnswerInfo'}" />
                <TemplateInstruction TemplateName="Horizontal" TemplateTarget="FieldPane" Parameters="{ParameterValues VerticalAlignment='Center';Visibility={Expression IF auxSortOn.RouteStatus = Keep OR AuxSortOn.RouteStatus = OffRoute THEN 'Collapsed' ELSE IF auxInPortraitMode.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF ENDIF}}" PlaceholderName="dCases_auxSortOn1" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxCustomFilter">
              <Instructions>
                <TemplateInstruction TemplateName="DropDownList" TemplateTarget="DataValue" Parameters="{ParameterValues OnValueChanged={Action ProcedureCall({Expression HandleCustomFilterChange()})}}" />
                <TemplateInstruction TemplateName="Vertical" TemplateTarget="FieldPane" Parameters="{ParameterValues Width='Auto';IsStretched='False';Visibility={Expression IF auxCustomFilter.RouteStatus = Keep OR auxCustomFilter.RouteStatus = OffRoute THEN 'Collapsed' ELSE IF auxInPortraitMode.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF ENDIF}}" PlaceholderName="dCases_auxCustomFilter1" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dCases.auxDataGridHeaderPortrait">
              <Instructions>
                <TemplateInstruction TemplateName="QuestionTextOnly" TemplateTarget="FieldPane" PlaceholderName="dCases_auxDataGridHeaderPortrait1" />
              </Instructions>
            </RouteItemLayoutInstructions>
          </InstanceLayoutInstructions>
          <CustomPageTemplates>
            <CustomPageTemplate PageIndex="0">
              <Template DesignWidth="1024" DesignHeight="620" OnLoad="{Action Conditional({Expression auxDeviceInfo.AnswerStatus = Empty},{Action AssignField('auxDeviceInfo', {Expression 'Device=' + TOSTRING(Client.Device) + ';OS=' + Client.OS + ';Height=' + TOSTRING(Client.Height) + ';Width=' + TOSTRING(Client.Width) + ';ResourceSet=' + State.ResourceSetName}, '');SetLanguage({Expression CurrentLanguage.StringValue})},{Action Conditional({Expression CurrentLanguage.StringValue &lt;&gt; State.LanguageName},{Action ProcedureCall({Expression Translate(State.LanguageName)})},'')});SetStyle({Expression auxStyle.StringValue});AssignField('auxHeight', '', {Expression Client.Height});AssignField('auxWidth', '', {Expression Client.Width});AssignField('auxLayoutSetName', {Expression State.ActualLayoutSetName}, '');AssignField('auxCount', '', {Expression auxCount.IntegerValue + 1})}">
                <Items>
                  <Grid Name="backgroundGrid" Background="{Style Background}" Width="Stretch" Height="Stretch">
                    <ExpressionReferences>
                      <StateExpressionReference />
                      <DatamodelExpressionReference />
                      <ServerVariablesExpressionReference />
                      <ClientFeaturesExpressionReference />
                      <TextProviderExpressionReference />
                      <PageExpressionReference />
                      <MappedFieldExpressionReference>
                        <ReferenceName>DS_mCases</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>LanguageEnum</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDetails</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxWhatCasesToShow</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDataGridHeaderAll</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDataGridHeaderNonCompleted</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDataGridHeaderCompleted</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDataGridHeaderPortrait</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxWhatSurveyToShow</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxFilter</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>btnStyle</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortOn</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCustomFilter</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>btnCases</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CurrentLanguage</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CurLan</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDoNotAllowEditCase</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDoNotAllowShowingAttempts</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxShowGeoPositionBtn</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxShowLanguageDropDown</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxFinal</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCurrentSurvey</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxStatus</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxGroupStatus</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxGroupSummary</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxContactData</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxLastAttempt</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCaseNote</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSpawnAllowed</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxIsDonorCase</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxIsNonWindows</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDeviceInfo</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxInPortraitMode</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCount</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxLayoutSetName</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxHasCustomFilter</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCustomFilterValue</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCustomFilterTxt</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCustomFilterCount</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_1_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_2_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_3_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_4_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_5_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_6_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_7_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_8_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_9_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_10_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_11_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_12_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_13_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_14_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_15_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_16_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_17_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_18_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_19_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_20_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_21_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_22_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_23_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_24_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_25_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_26_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_27_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_28_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_29_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_30_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_31_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_32_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_33_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_34_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_35_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_36_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_37_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_38_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_39_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CustomFV_40_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxUseSearchButton</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxTextFontSize</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_1_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_2_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_3_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_4_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_5_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_6_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_7_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_8_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_9_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_10_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_11_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_12_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_13_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_14_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_15_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_16_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_17_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_18_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_19_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_20_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_21_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_22_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_23_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_24_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_25_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_26_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_27_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_28_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_29_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_30_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_31_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_32_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_33_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_34_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_35_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_36_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_37_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_38_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_39_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>srvNames_40_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxWhatSurveyToShowGUID</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCustomTemplate</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCustomDetailsTable</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxGeoLocation</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxHasImage</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxGroupType</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxParentChildView</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxFieldFilter</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxFieldFilterTitles</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxFieldFilterWidths</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxStyleCount</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxStyleNr</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxStyle</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAutoSizeBtns</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>LanguageImage_1_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>LanguageImage_2_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>LanguageImage_3_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>LanguageCount</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortText_1_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortText_2_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortText_3_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortText_4_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortText_5_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortText_6_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortText_7_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortText_8_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortText_9_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortText_10_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAllowSort</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxConfirmedFilter</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCollapseDetails</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>LanguageID1</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>LanguageID2</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>LanguageID3</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_EN</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_NL</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                    </ExpressionReferences>
                    <Columns>
                      <Column Width="*" />
                    </Columns>
                    <Rows>
                      <Row Height="*" />
                    </Rows>
                    <Children>
                      <Grid Name="mainGrid" Background="#FFF0F0F0" Margin="{Style MainGridMargin}" Width="Stretch" Height="Stretch">
                        <Columns>
                          <Column Width="*" />
                        </Columns>
                        <Rows>
                          <Row Height="Auto" />
                          <Row Height="*" />
                        </Rows>
                        <Children>
                          <Grid Name="headerGrid" Background="{Style Background}" Width="Stretch">
                            <Columns>
                              <Column Width="*" />
                            </Columns>
                            <Rows>
                              <Row Height="Auto" />
                            </Rows>
                            <Children>
                              <Panel Name="headerPanel" Background="{Style TitleAreaBackground}" Margin="{Style HeaderMargin}" Width="Stretch" CornerRadius="{Style HeaderCornerRadius}">
                                <Grid Name="titleAreaGrid" Margin="5" Width="Stretch" BorderColor="#FFE6E6FA">
                                  <Columns>
                                    <Column Width="Auto" />
                                    <Column />
                                    <Column Width="*" />
                                    <Column Width="Auto" />
                                    <Column />
                                  </Columns>
                                  <Rows>
                                    <Row Height="Auto" />
                                  </Rows>
                                  <Children>
                                    <ImageControl Name="companyLogo" Visibility="{Expression IF auxInPortraitMode.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF}" VerticalAlignment="Center" Margin="2" ScreenReaderText="Company logo" Source="Logo" ScreenReaderTextSource="Literal" TabIndex="-1" OnClick="{Action ProcedureCall({Expression ShowLog()})}">
                                      <ScreenReaderRichTextDefinition>
                                        <RunElements />
                                      </ScreenReaderRichTextDefinition>
                                    </ImageControl>
                                    <Menu Name="menu1" ColumnIndex="1" Visibility="{Expression IF auxInPortraitMode.AnswerStatus = Response THEN 'Visible' ELSE 'Collapsed' ENDIF}" FontName="Menu">
                                      <MenuItems>
                                        <MenuItem Text="☰">
                                          <MenuItems>
                                            <MenuItem Text="{Expression btnCases.GetCategoryByCode(7).GetRoleText('ToolTip')}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Sync', 0)})}" />
                                            <MenuItem Text="{Expression REPLACE(auxWhatSurveyToShow.GetRoleText('Question'), ':', '')}">
                                              <MenuItems>
                                                <MenuItem Text="{Expression REPLACE(auxWhatSurveyToShow.GetCategoryByCode(0).Text, '\\', '')}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 0)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 1 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(1).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(1).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(1).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 1)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 2 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(2).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(2).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(2).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 2)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 3 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(3).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(3).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(3).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 3)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 4 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(4).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(4).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(4).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 4)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 5 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(5).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(5).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(5).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 5)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 6 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(6).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(6).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(6).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 6)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 7 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(7).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(7).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(7).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 7)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 8 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(8).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(8).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(8).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 8)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 9 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(9).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(9).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(9).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 9)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 10 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(10).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(10).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(10).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 10)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 11 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(11).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(11).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(11).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 11)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 12 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(12).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(12).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(12).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 12)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 13 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(13).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(13).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(13).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 13)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 14 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(14).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(14).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(14).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 14)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 15 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(15).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(15).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(15).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 15)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 16 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(16).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(16).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(16).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 16)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 17 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(17).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(17).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(17).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 17)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 18 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(18).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(18).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(18).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 18)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 19 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(19).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(19).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(19).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 19)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 20 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(20).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(20).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(20).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 20)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 21 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(22).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(21).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(21).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 21)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 22 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(23).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(22).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(22).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 22)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 23 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(23).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(23).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(23).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 23)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 24 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(24).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(24).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(24).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 24)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 25 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(25).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(25).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(25).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 25)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 26 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(26).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(26).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(26).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 26)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 27 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(27).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(27).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(27).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 27)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 28 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(28).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(28).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(28).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 28)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 29 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(29).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(29).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(29).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 29)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 30 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(30).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(30).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(30).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 30)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 31 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(31).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(31).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(31).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 31)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 32 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(33).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(32).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(32).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 32)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 33 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(34).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(33).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(33).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 33)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 34 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(34).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(34).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(34).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 34)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 35 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(35).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(35).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(35).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 35)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 36 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(36).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(36).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(36).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 36)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 37 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(37).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(37).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(37).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 37)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 38 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(38).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(38).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(38).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 38)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 39 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(39).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(39).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(39).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 39)})}" />
                                                <MenuItem Text="{Expression IF auxWhatSurveyToShow.EnumerationValue = 40 THEN '✓ ' + auxWhatSurveyToShow.GetCategoryByCode(40).Text ELSE auxWhatSurveyToShow.GetCategoryByCode(40).Text ENDIF}" Visibility="{Expression IF auxWhatSurveyToShow.GetCategoryByCode(40).Text &lt;&gt; '' THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srv', 40)})}" />
                                              </MenuItems>
                                            </MenuItem>
                                            <MenuItem Text="{Expression auxCustomFilterTxt.StringValue}" Visibility="{Expression IF auxHasCustomFilter.AnswerStatus &lt;&gt; EMPTY THEN 'Visible' ELSE 'Collapsed' ENDIF}">
                                              <MenuItems>
                                                <MenuItem Text="{Expression REPLACE(auxCustomFilter.GetCategoryByCode(0).Text, '\\', '')}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 0)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(1).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 0 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 1)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(2).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 1 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 2)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(3).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 2 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 3)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(4).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 3 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 4)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(5).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 4 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 5)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(6).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 5 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 6)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(7).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 6 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 7)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(8).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 7 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 8)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(9).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 8 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 9)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(10).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 9 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 10)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(11).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 10 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 11)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(12).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 11 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 12)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(13).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 12 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 13)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(14).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 13 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 14)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(15).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 14 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 15)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(16).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 15 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 16)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(17).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 16 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 17)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(18).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 17 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 18)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(19).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 18 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 19)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(20).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 19 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 20)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(21).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 20 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 21)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(22).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 21 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 22)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(23).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 22 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 23)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(24).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 23 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 24)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(25).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 24 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 25)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(26).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 25 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 26)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(27).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 26 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 27)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(28).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 27 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 28)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(29).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 28 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 29)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(30).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 29 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 30)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(31).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 30 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 31)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(32).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 31 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 32)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(33).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 32 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 33)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(34).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 33 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 34)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(35).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 34 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 35)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(36).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 35 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 36)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(37).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 36 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 37)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(38).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 37 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 38)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(39).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 38 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 39)})}" />
                                                <MenuItem Text="{Expression auxCustomFilter.GetCategoryByCode(40).Text}" Visibility="{Expression IF auxCustomFilterCount.IntegerValue &gt; 39 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Cfltr', 40)})}" />
                                              </MenuItems>
                                            </MenuItem>
                                            <MenuItem Text="{Expression REPLACE(auxWhatCasesToShow.GetRoleText('Question'), ':', '')}">
                                              <MenuItems>
                                                <MenuItem Text="{Expression IF auxWhatCasesToShow.EnumerationValue = 0 THEN '✓ ' + auxWhatCasesToShow.GetCategoryByCode(0).GetRoleText('ToolTip') ELSE auxWhatCasesToShow.GetCategoryByCode(0).GetRoleText('ToolTip') ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('CShw', 0)})}" />
                                                <MenuItem Text="{Expression IF auxWhatCasesToShow.EnumerationValue = 1 THEN '✓ ' + auxWhatCasesToShow.GetCategoryByCode(1).GetRoleText('ToolTip') ELSE auxWhatCasesToShow.GetCategoryByCode(1).GetRoleText('ToolTip') ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('CShw', 1)})}" />
                                                <MenuItem Text="{Expression IF auxWhatCasesToShow.EnumerationValue = 2 THEN '✓ ' + auxWhatCasesToShow.GetCategoryByCode(2).GetRoleText('ToolTip') ELSE auxWhatCasesToShow.GetCategoryByCode(2).GetRoleText('ToolTip') ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('CShw', 2)})}" />
                                              </MenuItems>
                                            </MenuItem>
                                            <MenuItem Text="{Expression REPLACE(auxSortOn.GetRoleText('Question'), ':', '')}" Visibility="{Expression IF auxAllowSort.EnumerationValue = 1 THEN 'Visible' ELSE 'Collapsed' ENDIF}">
                                              <MenuItems>
                                                <MenuItem Text="{Expression IF AuxSortOn.EnumerationValue = 1 THEN '✓ ' + AuxSortOn.GetCategoryByCode(1).Text ELSE AuxSortOn.GetCategoryByCode(1).Text ENDIF}" Visibility="{Expression IF auxSortText_1_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srt', 1)})}" />
                                                <MenuItem Text="{Expression IF AuxSortOn.EnumerationValue = 2 THEN '✓ ' + AuxSortOn.GetCategoryByCode(2).Text ELSE AuxSortOn.GetCategoryByCode(2).Text ENDIF}" Visibility="{Expression IF auxSortText_2_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srt', 2)})}" />
                                                <MenuItem Text="{Expression IF AuxSortOn.EnumerationValue = 3 THEN '✓ ' + AuxSortOn.GetCategoryByCode(3).Text ELSE AuxSortOn.GetCategoryByCode(3).Text ENDIF}" Visibility="{Expression IF auxSortText_3_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srt', 3)})}" />
                                                <MenuItem Text="{Expression IF AuxSortOn.EnumerationValue = 4 THEN '✓ ' + AuxSortOn.GetCategoryByCode(4).Text ELSE AuxSortOn.GetCategoryByCode(4).Text ENDIF}" Visibility="{Expression IF auxSortText_4_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srt', 4)})}" />
                                                <MenuItem Text="{Expression IF AuxSortOn.EnumerationValue = 5 THEN '✓ ' + AuxSortOn.GetCategoryByCode(5).Text ELSE AuxSortOn.GetCategoryByCode(5).Text ENDIF}" Visibility="{Expression IF auxSortText_5_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srt', 5)})}" />
                                                <MenuItem Text="{Expression IF AuxSortOn.EnumerationValue = 6 THEN '✓ ' + AuxSortOn.GetCategoryByCode(6).Text ELSE AuxSortOn.GetCategoryByCode(6).Text ENDIF}" Visibility="{Expression IF auxSortText_6_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srt', 6)})}" />
                                                <MenuItem Text="{Expression IF AuxSortOn.EnumerationValue = 7 THEN '✓ ' + AuxSortOn.GetCategoryByCode(7).Text ELSE AuxSortOn.GetCategoryByCode(7).Text ENDIF}" Visibility="{Expression IF auxSortText_7_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srt', 7)})}" />
                                                <MenuItem Text="{Expression IF AuxSortOn.EnumerationValue = 8 THEN '✓ ' + AuxSortOn.GetCategoryByCode(8).Text ELSE AuxSortOn.GetCategoryByCode(8).Text ENDIF}" Visibility="{Expression IF auxSortText_8_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srt', 8)})}" />
                                                <MenuItem Text="{Expression IF AuxSortOn.EnumerationValue = 9 THEN '✓ ' + AuxSortOn.GetCategoryByCode(9).Text ELSE AuxSortOn.GetCategoryByCode(9).Text ENDIF}" Visibility="{Expression IF auxSortText_9_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srt', 9)})}" />
                                                <MenuItem Text="{Expression IF AuxSortOn.EnumerationValue = 10 THEN '✓ ' + AuxSortOn.GetCategoryByCode(10).Text ELSE AuxSortOn.GetCategoryByCode(10).Text ENDIF}" Visibility="{Expression IF auxSortText_10_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Srt', 10)})}" />
                                              </MenuItems>
                                            </MenuItem>
                                            <MenuItem Text="{Expression CurLan.GetRoleText('Question')}" Visibility="{Expression IF Datamodel.Languages.Count &gt; 1 AND LanguageCount.IntegerValue = 0 THEN 'Visible' ELSE 'Collapsed' ENDIF}">
                                              <MenuItems>
                                                <MenuItem Text="{Expression IF State.LanguageName = CurLan.GetCategoryByCode(1).Name THEN '✓ ' + CurLan.GetCategoryByCode(1).Text ELSE CurLan.GetCategoryByCode(1).Text ENDIF}" OnClick="{Action SetLanguage({Expression CurLan.GetCategoryByCode(1).Name})}" />
                                                <MenuItem Text="{Expression IF State.LanguageName = CurLan.GetCategoryByCode(2).Name THEN '✓ ' + CurLan.GetCategoryByCode(2).Text ELSE CurLan.GetCategoryByCode(2).Text ENDIF}" OnClick="{Action SetLanguage({Expression CurLan.GetCategoryByCode(2).Name})}" />
                                                <MenuItem Text="{Expression IF State.LanguageName = CurLan.GetCategoryByCode(3).Name THEN '✓ ' + CurLan.GetCategoryByCode(3).Text ELSE CurLan.GetCategoryByCode(3).Text ENDIF}" Visibility="{Expression IF Datamodel.Languages.Count &gt; 2 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action SetLanguage({Expression CurLan.GetCategoryByCode(3).Name})}" />
                                                <MenuItem Text="{Expression IF State.LanguageName = CurLan.GetCategoryByCode(4).Name THEN '✓ ' + CurLan.GetCategoryByCode(4).Text ELSE CurLan.GetCategoryByCode(4).Text ENDIF}" Visibility="{Expression IF Datamodel.Languages.Count &gt; 3 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action SetLanguage({Expression CurLan.GetCategoryByCode(4).Name})}" />
                                                <MenuItem Text="{Expression IF State.LanguageName = CurLan.GetCategoryByCode(5).Name THEN '✓ ' + CurLan.GetCategoryByCode(5).Text ELSE CurLan.GetCategoryByCode(5).Text ENDIF}" Visibility="{Expression IF Datamodel.Languages.Count &gt; 4 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action SetLanguage({Expression CurLan.GetCategoryByCode(5).Name})}" />
                                                <MenuItem Text="{Expression IF State.LanguageName = CurLan.GetCategoryByCode(6).Name THEN '✓ ' + CurLan.GetCategoryByCode(6).Text ELSE CurLan.GetCategoryByCode(6).Text ENDIF}" Visibility="{Expression IF Datamodel.Languages.Count &gt; 5 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action SetLanguage({Expression CurLan.GetCategoryByCode(6).Name})}" />
                                                <MenuItem Text="{Expression IF State.LanguageName = CurLan.GetCategoryByCode(7).Name THEN '✓ ' + CurLan.GetCategoryByCode(7).Text ELSE CurLan.GetCategoryByCode(7).Text ENDIF}" Visibility="{Expression IF Datamodel.Languages.Count &gt; 6 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action SetLanguage({Expression CurLan.GetCategoryByCode(7).Name})}" />
                                                <MenuItem Text="{Expression IF State.LanguageName = CurLan.GetCategoryByCode(8).Name THEN '✓ ' + CurLan.GetCategoryByCode(8).Text ELSE CurLan.GetCategoryByCode(8).Text ENDIF}" Visibility="{Expression IF Datamodel.Languages.Count &gt; 7 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action SetLanguage({Expression CurLan.GetCategoryByCode(8).Name})}" />
                                                <MenuItem Text="{Expression IF State.LanguageName = CurLan.GetCategoryByCode(9).Name THEN '✓ ' + CurLan.GetCategoryByCode(9).Text ELSE CurLan.GetCategoryByCode(9).Text ENDIF}" Visibility="{Expression IF Datamodel.Languages.Count &gt; 8 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action SetLanguage({Expression CurLan.GetCategoryByCode(9).Name})}" />
                                                <MenuItem Text="{Expression IF State.LanguageName = CurLan.GetCategoryByCode(10).Name THEN '✓ ' + CurLan.GetCategoryByCode(10).Text ELSE CurLan.GetCategoryByCode(10).Text ENDIF}" Visibility="{Expression IF Datamodel.Languages.Count &gt; 9 THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action SetLanguage({Expression CurLan.GetCategoryByCode(10).Name})}" />
                                              </MenuItems>
                                            </MenuItem>
                                            <MenuItem Text="{Expression btnStyle.GetCategoryByCode(1).GetRoleText('ToolTip')}" Visibility="{Expression IF btnStyle.RouteStatus = Keep OR btnStyle.RouteStatus = OffRoute THEN 'Collapsed' ELSE 'Visible' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Stl', 0)})}" />
                                            <MenuItem Text="Logging" OnClick="{Action ProcedureCall({Expression ShowLog()})}" />
                                          </MenuItems>
                                        </MenuItem>
                                      </MenuItems>
                                    </Menu>
                                    <ParallelsArea Name="parallelsArea1" ColumnIndex="2" Visibility="{Expression IF auxInPortraitMode.AnswerStatus &lt;&gt; EMPTY THEN 'Collapsed' ELSE 'Visible' ENDIF}" DesignHeight="42">
                                      <DefaultTemplates>
                                        <TemplateReference Name="DialogHeader" Kind="Parallel" />
                                      </DefaultTemplates>
                                    </ParallelsArea>
                                    <LanguageSelector Name="languageSelector" ColumnIndex="3" Visibility="{Expression IF (Datamodel.Languages.Count &gt; 1 AND auxShowLanguageDropDown.Answerstatus &lt;&gt; EMPTY) AND auxInPortraitMode.AnswerStatus = EMPTY THEN 'Visible' ELSE 'Collapsed' ENDIF}" Margin="10" ScreenReaderTextKey="txtSelect" OnMouseDown="{Action SetControlProperty('languageSelector','Background','Brush','{Style AnswerButtonBackgroundSelected}')}" OnMouseUp="{Action SetControlProperty('languageSelector','Background','Brush','#00000000')}" ScreenReaderTextSource="Key" TabIndex="2" />
                                    <FieldPaneInstanceArea Name="dCases_LanguageEnum1" ColumnIndex="4" DesignHeight="100" FieldName="dCases.LanguageEnum" />
                                  </Children>
                                </Grid>
                              </Panel>
                            </Children>
                          </Grid>
                          <Panel Name="contentAreaPanel" RowIndex="1" Width="Stretch" Height="Stretch" Comment="To allow for vertical scrolling when questions don't fit on the page. Make sure all children are Auto height.&#xD;&#xA;">
                            <Grid Name="contentGrid" Margin="{Expression IF auxInPortraitMode.AnswerStatus = Empty THEN '5' ELSE '0' ENDIF}" Width="Stretch" Height="Stretch">
                              <Columns>
                                <Column Width="*" />
                              </Columns>
                              <Rows>
                                <Row Height="Auto" />
                                <Row />
                                <Row />
                                <Row />
                                <Row />
                                <Row Height="{Expression IF auxInPortraitMode.AnswerStatus &lt;&gt; Empty THEN '*' ELSE '2*' ENDIF}" />
                                <Row />
                                <Row Height="{Expression IF auxCustomDetailsTable.AnswerStatus = Empty AND auxCollapseDetails.ANSWERSTATUS &lt;&gt; EMPTY THEN '0' ELSE '*' ENDIF}" />
                                <Row />
                              </Rows>
                              <Children>
                                <Grid Name="grid1" Visibility="{Expression IF auxParentChildView.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF}" Width="Stretch">
                                  <Columns>
                                    <Column Width="Auto" />
                                    <Column />
                                    <Column Width="Auto" />
                                    <Column Width="0" />
                                    <Column Width="*" />
                                    <Column Width="Auto" />
                                  </Columns>
                                  <Rows>
                                    <Row Height="Auto" />
                                  </Rows>
                                  <Children>
                                    <FieldPaneInstanceArea Name="dCases_auxWhatSurveyToShow1" DesignHeight="100" FieldName="dCases.auxWhatSurveyToShow" />
                                    <FieldPaneInstanceArea Name="dCases_auxCustomFilter1" ColumnIndex="2" DesignHeight="100" FieldName="dCases.auxCustomFilter" />
                                    <Timer Name="timer1" ColumnIndex="3" AutoStart="False" OnTick="{Action StopTimer('timer1');ProcedureCall({Expression TimerHandleChange()})}" />
                                    <FieldPaneInstanceArea Name="dCases_auxFilter1" ColumnIndex="4" DesignHeight="100" FieldName="dCases.auxFilter" />
                                    <FieldPaneInstanceArea Name="dCases_auxWhatCasesToShow1" ColumnIndex="5" DesignHeight="100" FieldName="dCases.auxWhatCasesToShow" />
                                  </Children>
                                </Grid>
                                <FieldPaneInstanceArea Name="dCases_auxDataGridHeaderNonCompleted1" RowIndex="1" DesignHeight="100" FieldName="dCases.auxDataGridHeaderNonCompleted" />
                                <FieldPaneInstanceArea Name="dCases_auxDataGridHeaderCompleted1" RowIndex="2" DesignHeight="100" FieldName="dCases.auxDataGridHeaderCompleted" />
                                <FieldPaneInstanceArea Name="dCases_auxDataGridHeaderAll1" RowIndex="3" DesignHeight="100" FieldName="dCases.auxDataGridHeaderAll" />
                                <FieldPaneInstanceArea Name="dCases_auxDataGridHeaderPortrait1" RowIndex="4" DesignHeight="100" FieldName="dCases.auxDataGridHeaderPortrait" />
                                <FieldPaneInstanceArea Name="dCases_DS_mCases1" RowIndex="5" DesignHeight="100" FieldName="dCases.DS_mCases" />
                                <FieldPaneInstanceArea Name="dCases_auxSortOn1" RowIndex="6" DesignHeight="100" FieldName="dCases.auxSortOn" />
                                <Panel Name="panel1" RowIndex="7" Width="Stretch" Height="Stretch" VerticalScrollBar="Auto">
                                  <FieldPaneInstanceArea Name="dCases_auxDetails1" DesignHeight="100" FieldName="dCases.auxDetails" />
                                </Panel>
                                <Grid Name="grid2" RowIndex="8" Width="Stretch" ColumnCount="2">
                                  <Children>
                                    <FieldPaneInstanceArea Name="dCases_btnStyle1" DesignHeight="100" FieldName="dCases.btnStyle" />
                                    <FieldPaneInstanceArea Name="dCases_btnCases1" ColumnIndex="1" DesignHeight="100" FieldName="dCases.btnCases" />
                                  </Children>
                                </Grid>
                              </Children>
                            </Grid>
                          </Panel>
                        </Children>
                      </Grid>
                    </Children>
                  </Grid>
                </Items>
              </Template>
            </CustomPageTemplate>
          </CustomPageTemplates>
          <IsGeneric>false</IsGeneric>
        </Parallel>
        <Parallel Name="dGroup" DialogHeight="620" DialogWidth="1024" InitialWindowState="Maximized">
          <InstanceLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dGroup.auxDetails">
              <Instructions>
                <TemplateInstruction TemplateName="QuestionTextOnly" TemplateTarget="FieldPane" PlaceholderName="auxDetailsFieldPaneArea" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dGroup.btnGroup">
              <Instructions>
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Margin='3';Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};HorizontalAlignment='Center'}" ObjectName="" />
                <TemplateInstruction TemplateName="ResultButtons" TemplateTarget="FieldPane" Parameters="{ParameterValues HorizontalAlignment='Center';Margin='0';IsStretched='True'}" PlaceholderName="dGroup_btnGroup1" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression StartInterview()})};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};IsEnabled={Expression auxFinal.AnswerStatus = Empty AND auxIsDonorCase.Answerstatus = Empty};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF}}" ObjectName="Cancel_IW" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression ProcessAttemptsAndStartDialog()});ProcedureCall({Expression UpdateTemporaryCasesFile(3, '*')})};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};IsEnabled={Expression auxIsDonorCase.AnswerStatus = Empty};Margin='3';Visibility={Expression IF auxDoNotAllowShowingAttempts.AnswerStatus = RESPONSE THEN 'Collapsed' ELSE 'Visible' ENDIF}}" ObjectName="Cancel_Attempt" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression UpdateCaseEntry()})};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};IsEnabled={Expression auxFinal.AnswerStatus = Empty AND auxIsDonorCase.Answerstatus = Empty};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Visibility={Expression IF auxDoNotAllowEditCase.AnswerStatus &lt;&gt; EMPTY THEN 'Collapsed' ELSE 'Visible' ENDIF}}" ObjectName="Cancel_Update" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression Sync(0)});ProcedureCall({Expression UpdateTemporaryCasesFile(3, '*')})};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF}}" ObjectName="Cancel_Synchronize" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action AssignField('Field', '', {Expression Category.Code});CloseDialog()};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Visibility='Visible'}" ObjectName="Back" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues IsEnabled={Expression auxSpawnAllowed.EnumerationValue = 1};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Visibility={Expression IF auxSpawnAllowed.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF};OnClick={Action ProcedureCall({Expression SpawnCase()})}}" ObjectName="Cancel_Spawn" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression GeoButtonClick()})};Visibility={Expression IF auxShowGeoPositionBtn.AnswerStatus = Response THEN 'Visible' ELSE 'Collapsed' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};IsEnabled={Expression auxFinal.AnswerStatus = Empty AND auxIsDonorCase.Answerstatus = Empty}}" ObjectName="Cancel_CollectGeoLoc" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};OnClick={Action ProcedureCall({Expression AddAttemptsFromGroupCasesScreen()});ProcedureCall({Expression UpdateTemporaryCasesFile(3, '*')})};IsEnabled={Expression auxFinal.AnswerStatus = Empty AND auxIsDonorCase.Answerstatus = Empty};Visibility={Expression IF auxShowGroupAddAttemptBtn.AnswerStatus = Empty THEN 'Collapsed' ELSE 'Visible' ENDIF}}" ObjectName="Cancel_Add" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};OnClick={Action ProcedureCall({Expression SetGroupDone()})};Margin='20,3,20,3';Visibility={Expression IF auxEnableGroupDoneBtn.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF};IsEnabled={Expression auxEnableGroupDoneBtn.AnswerStatus &lt;&gt; Empty}}" ObjectName="Cancel_Done" />
                <TemplateInstruction TemplateName="DialogButtons" TemplateTarget="DataValue" Parameters="{ParameterValues Margin='0,5,0,0'}" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dGroup.DS_gCases">
              <Instructions>
                <TemplateInstruction TemplateName="Vertical" TemplateTarget="FieldPane" Parameters="{ParameterValues IsStretched='True';HeightStretched='True'}" PlaceholderName="DS_mCasesFieldPaneArea" />
                <TemplateInstruction TemplateName="DataView" TemplateTarget="ResponseValue" Parameters="{ParameterValues HeaderRoleName='Question';HeaderTextSource='TextOrName';OnRecordSelected={Action ProcedureCall({Expression UpdateCasesScreen()})};FieldFilter={Expression auxFieldFilter.StringValue};ColumnNames={Expression auxFieldFilterTitles.StringValue};ColumnWidths={Expression auxFieldFilterWidths.StringValue}}" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dGroup.auxSortGrpOn">
              <Instructions>
                <TemplateInstruction TemplateName="Horizontal" TemplateTarget="FieldPane" Parameters="{ParameterValues VerticalAlignment='Center';Visibility={Expression IF auxSortGrpOn.RouteStatus = Keep OR AuxSortGrpOn.RouteStatus = OffRoute THEN 'Collapsed' ELSE IF auxInPortraitMode.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF ENDIF}}" PlaceholderName="dGroup_auxSortGrpOn1" />
                <TemplateInstruction TemplateName="DropDownList" TemplateTarget="DataValue" Parameters="{ParameterValues OnValueChanged={Action ProcedureCall({Expression SortCasesGrp()})}}" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dGroup.btnStyle">
              <Instructions>
                <TemplateInstruction TemplateName="DialogButtons" TemplateTarget="DataValue" Parameters="{ParameterValues Margin='5,5,0,0'}" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Height={Style CMAButtonHeight};Width={Style CMAButtonWidth};OnClick={Action ProcedureCall({Expression ChangeStyle()});SetStyle({Expression auxStyle.StringValue});ProcedureCall({Expression FillSurveyNamesArray()})}}" ObjectName="Change" />
                <TemplateInstruction TemplateName="ResultButtons" TemplateTarget="FieldPane" Parameters="{ParameterValues Margin='0';Visibility={Expression IF (btnStyle.RouteStatus = Keep OR btnStyle.RouteStatus = OffRoute) OR auxInPortraitMode.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF}}" PlaceholderName="dGroup_btnStyle1" />
              </Instructions>
            </RouteItemLayoutInstructions>
          </InstanceLayoutInstructions>
          <CustomPageTemplates>
            <CustomPageTemplate PageIndex="0">
              <Template DesignWidth="1024" DesignHeight="620" OnLoad="{Action SetStyle({Expression auxStyle.StringValue})}">
                <Items>
                  <Grid Name="backgroundGrid" Background="{Style Background}" Width="Stretch" Height="Stretch">
                    <ExpressionReferences>
                      <StateExpressionReference />
                      <DatamodelExpressionReference />
                      <ServerVariablesExpressionReference />
                      <ClientFeaturesExpressionReference />
                      <TextProviderExpressionReference />
                      <UserExpressionReference />
                      <PageExpressionReference />
                      <MappedFieldExpressionReference>
                        <ReferenceName>DS_gCases</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDetails</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>btnStyle</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpOn</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>btnGroup</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>CurrentLanguage</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxFinal</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCurrentSurvey</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxStatus</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxGroupStatus</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxGroupSummary</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxContactData</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxLastAttempt</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCaseNote</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSpawnAllowed</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxIsDonorCase</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxIsNonWindows</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDeviceInfo</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxInPortraitMode</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxLayoutSetName</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCount</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDoNotAllowEditCase</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxShowGeoPositionBtn</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCustomTemplate</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCustomDetailsTable</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxGeoLocation</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxHasImage</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxGroupType</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxParentChildView</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpText_1_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpText_2_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpText_3_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpText_4_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpText_5_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpText_6_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpText_7_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpText_8_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpText_9_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxSortGrpText_10_</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAllowGrpSort</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxHasInterview</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAutoSizeBtns</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxFieldFilter</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxFieldFilterTitles</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxFieldFilterWidths</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxShowGroupDoneBtn</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxEnableGroupDoneBtn</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCurrentDoneStatus</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxShowGroupAddAttemptBtn</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxManualAttemptWhenIntStarted</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDoNotAllowShowingAttempts</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxParentDoneValues</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCollapseDetails</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxStyleCount</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxStyleNr</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxStyle</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_EN</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_NL</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                    </ExpressionReferences>
                    <Columns>
                      <Column Width="*" />
                    </Columns>
                    <Rows>
                      <Row Height="*" />
                    </Rows>
                    <Children>
                      <Grid Name="mainGrid" Background="#FFF0F0F0" Margin="{Style MainGridMargin}" Width="Stretch" Height="Stretch">
                        <Columns>
                          <Column Width="*" />
                        </Columns>
                        <Rows>
                          <Row Height="Auto" />
                          <Row Height="*" />
                        </Rows>
                        <Children>
                          <Grid Name="headerGrid" Background="{Style Background}" Width="Stretch">
                            <Columns>
                              <Column Width="*" />
                            </Columns>
                            <Rows>
                              <Row Height="Auto" />
                            </Rows>
                            <Children>
                              <Panel Name="headerPanel" Background="{Style TitleAreaBackground}" Margin="{Style HeaderMargin}" Width="Stretch" CornerRadius="{Style HeaderCornerRadius}">
                                <Grid Name="titleAreaGrid" Margin="5" Width="Stretch" BorderColor="#FFE6E6FA">
                                  <Columns>
                                    <Column Width="Auto" />
                                    <Column />
                                    <Column Width="*" />
                                    <Column Width="Auto" />
                                  </Columns>
                                  <Rows>
                                    <Row Height="Auto" />
                                  </Rows>
                                  <Children>
                                    <ImageControl Name="companyLogo" Visibility="{Expression IF auxInPortraitMode.AnswerStatus = Response THEN 'Collapsed' ELSE 'Visible' ENDIF}" Margin="2" ScreenReaderText="Company logo" Source="Logo" ScreenReaderTextSource="Literal" TabIndex="-1" OnClick="{Action ProcedureCall({Expression ShowLog()})}">
                                      <ScreenReaderRichTextDefinition>
                                        <RunElements />
                                      </ScreenReaderRichTextDefinition>
                                    </ImageControl>
                                    <Menu Name="menu1" ColumnIndex="1" Visibility="{Expression IF auxInPortraitMode.AnswerStatus = Response THEN 'Visible' ELSE 'Collapsed' ENDIF}" FontName="Menu">
                                      <MenuItems>
                                        <MenuItem Text="☰">
                                          <MenuItems>
                                            <MenuItem Text="{Expression btnGroup.GetCategoryByCode(8).GetRoleText('ToolTip')}" OnClick="{Action ProcedureCall({Expression MenuItemClick('Sync', 0)})}" />
                                            <MenuItem Text="{Expression REPLACE(auxSortGrpOn.GetRoleText('Question'), ':', '')}" Visibility="{Expression IF auxAllowGrpSort.EnumerationValue = 1 THEN 'Visible' ELSE 'Collapsed' ENDIF}">
                                              <MenuItems>
                                                <MenuItem Text="{Expression IF AuxSortGrpOn.EnumerationValue = 1 THEN '✓ ' + AuxSortGrpOn.GetCategoryByCode(1).Text ELSE AuxSortGrpOn.GetCategoryByCode(1).Text ENDIF}" Visibility="{Expression IF auxSortGrpText_1_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('SrtGrp', 1)})}" />
                                                <MenuItem Text="{Expression IF AuxSortGrpOn.EnumerationValue = 2 THEN '✓ ' + AuxSortGrpOn.GetCategoryByCode(2).Text ELSE AuxSortGrpOn.GetCategoryByCode(2).Text ENDIF}" Visibility="{Expression IF auxSortGrpText_2_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('SrtGrp', 2)})}" />
                                                <MenuItem Text="{Expression IF AuxSortGrpOn.EnumerationValue = 3 THEN '✓ ' + AuxSortGrpOn.GetCategoryByCode(3).Text ELSE AuxSortGrpOn.GetCategoryByCode(3).Text ENDIF}" Visibility="{Expression IF auxSortGrpText_3_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('SrtGrp', 3)})}" />
                                                <MenuItem Text="{Expression IF AuxSortGrpOn.EnumerationValue = 4 THEN '✓ ' + AuxSortGrpOn.GetCategoryByCode(4).Text ELSE AuxSortGrpOn.GetCategoryByCode(4).Text ENDIF}" Visibility="{Expression IF auxSortGrpText_4_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('SrtGrp', 4)})}" />
                                                <MenuItem Text="{Expression IF AuxSortGrpOn.EnumerationValue = 5 THEN '✓ ' + AuxSortGrpOn.GetCategoryByCode(5).Text ELSE AuxSortGrpOn.GetCategoryByCode(5).Text ENDIF}" Visibility="{Expression IF auxSortGrpText_5_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('SrtGrp', 5)})}" />
                                                <MenuItem Text="{Expression IF AuxSortGrpOn.EnumerationValue = 6 THEN '✓ ' + AuxSortGrpOn.GetCategoryByCode(6).Text ELSE AuxSortGrpOn.GetCategoryByCode(6).Text ENDIF}" Visibility="{Expression IF auxSortGrpText_6_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('SrtGrp', 6)})}" />
                                                <MenuItem Text="{Expression IF AuxSortGrpOn.EnumerationValue = 7 THEN '✓ ' + AuxSortGrpOn.GetCategoryByCode(7).Text ELSE AuxSortGrpOn.GetCategoryByCode(7).Text ENDIF}" Visibility="{Expression IF auxSortGrpText_7_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('SrtGrp', 7)})}" />
                                                <MenuItem Text="{Expression IF AuxSortGrpOn.EnumerationValue = 8 THEN '✓ ' + AuxSortGrpOn.GetCategoryByCode(8).Text ELSE AuxSortGrpOn.GetCategoryByCode(8).Text ENDIF}" Visibility="{Expression IF auxSortGrpText_8_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('SrtGrp', 8)})}" />
                                                <MenuItem Text="{Expression IF AuxSortGrpOn.EnumerationValue = 9 THEN '✓ ' + AuxSortGrpOn.GetCategoryByCode(9).Text ELSE AuxSortGrpOn.GetCategoryByCode(9).Text ENDIF}" Visibility="{Expression IF auxSortGrpText_9_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('SrtGrp', 9)})}" />
                                                <MenuItem Text="{Expression IF AuxSortGrpOn.EnumerationValue = 10 THEN '✓ ' + AuxSortGrpOn.GetCategoryByCode(10).Text ELSE AuxSortGrpOn.GetCategoryByCode(10).Text ENDIF}" Visibility="{Expression IF auxSortGrpText_10_.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}" OnClick="{Action ProcedureCall({Expression MenuItemClick('SrtGrp', 10)})}" />
                                              </MenuItems>
                                            </MenuItem>
                                            <MenuItem Text="{Expression btnStyle.GetCategoryByCode(1).GetRoleText('ToolTip')}" Visibility="{Expression IF btnStyle.RouteStatus = Keep OR btnStyle.RouteStatus = OffRoute THEN 'Collapsed' ELSE 'Visible' ENDIF}" OnClick="{Action ProcedureCall({Expression ChangeStyle()});SetStyle({Expression auxStyle.StringValue});ProcedureCall({Expression FillSurveyNamesArray()})}" />
                                            <MenuItem Text="Logging" OnClick="{Action ProcedureCall({Expression ShowLog()})}" />
                                          </MenuItems>
                                        </MenuItem>
                                      </MenuItems>
                                    </Menu>
                                    <ParallelsArea Name="parallelsArea1" ColumnIndex="2" DesignHeight="42">
                                      <DefaultTemplates>
                                        <TemplateReference Name="DialogHeader" Kind="Parallel" />
                                      </DefaultTemplates>
                                    </ParallelsArea>
                                  </Children>
                                </Grid>
                              </Panel>
                            </Children>
                          </Grid>
                          <Panel Name="contentAreaPanel" RowIndex="1" Margin="5" Width="Stretch" Height="Stretch" Comment="To allow for vertical scrolling when questions don't fit on the page. Make sure all children are Auto height.&#xD;&#xA;">
                            <Grid Name="contentGrid" Margin="5" Width="Stretch" Height="Stretch">
                              <Columns>
                                <Column Width="*" />
                              </Columns>
                              <Rows>
                                <Row Height="2*" />
                                <Row Height="Auto" />
                                <Row Height="{Expression IF auxCustomDetailsTable.AnswerStatus = Empty AND auxCollapseDetails.AnswerStatus &lt;&gt; EMPTY THEN '0' ELSE '*' ENDIF}" />
                                <Row />
                              </Rows>
                              <Children>
                                <FieldPaneInstanceArea Name="DS_mCasesFieldPaneArea" DesignWidth="730" DesignHeight="250" FieldName="dGroup.DS_gCases">
                                  <DefaultTemplates>
                                    <TemplateReference Name="InputWithActionButton" Kind="FieldPane" Parameters="{ParameterValues ActionButtonVisibility='Collapsed'}" />
                                    <TemplateReference Name="OnlyInput" Kind="FieldPane" />
                                    <TemplateReference Name="ResultButtons" Kind="FieldPane" />
                                    <TemplateReference Name="Vertical" Kind="FieldPane" Parameters="{ParameterValues Width='Stretch';IsStretched='False'}" />
                                  </DefaultTemplates>
                                </FieldPaneInstanceArea>
                                <Grid Name="grid1" RowIndex="1" VerticalAlignment="Center" Width="Stretch">
                                  <Columns>
                                    <Column />
                                    <Column Width="*" />
                                    <Column />
                                  </Columns>
                                  <Children>
                                    <FieldPaneInstanceArea Name="dGroup_auxSortGrpOn1" DesignHeight="100" FieldName="dGroup.auxSortGrpOn" />
                                  </Children>
                                </Grid>
                                <Panel Name="panel1" RowIndex="2" Width="Stretch" Height="Stretch" VerticalScrollBar="Auto">
                                  <FieldPaneInstanceArea Name="auxDetailsFieldPaneArea" RowIndex="3" DesignWidth="730" DesignHeight="250" FieldName="dGroup.auxDetails">
                                    <DefaultTemplates>
                                      <TemplateReference Name="InputWithActionButton" Kind="FieldPane" Parameters="{ParameterValues ActionButtonVisibility='Collapsed'}" />
                                      <TemplateReference Name="OnlyInput" Kind="FieldPane" />
                                      <TemplateReference Name="ResultButtons" Kind="FieldPane" />
                                      <TemplateReference Name="Vertical" Kind="FieldPane" Parameters="{ParameterValues Width='Stretch';IsStretched='False'}" />
                                    </DefaultTemplates>
                                  </FieldPaneInstanceArea>
                                </Panel>
                                <Grid Name="grid2" RowIndex="3" Width="Stretch" ColumnCount="2">
                                  <Children>
                                    <FieldPaneInstanceArea Name="dGroup_btnStyle1" DesignHeight="100" FieldName="dGroup.btnStyle" />
                                    <FieldPaneInstanceArea Name="dGroup_btnGroup1" ColumnIndex="1" DesignHeight="100" FieldName="dGroup.btnGroup" />
                                  </Children>
                                </Grid>
                              </Children>
                            </Grid>
                          </Panel>
                        </Children>
                      </Grid>
                    </Children>
                  </Grid>
                </Items>
              </Template>
            </CustomPageTemplate>
          </CustomPageTemplates>
          <IsGeneric>false</IsGeneric>
        </Parallel>
        <Parallel Name="dShowImage" InitialWindowState="Maximized">
          <InstanceLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dShowImage.auxIDone">
              <Instructions>
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Height='Auto';OnClick={Action CloseDialog()}}" ObjectName="" />
                <TemplateInstruction TemplateName="DialogButtons" TemplateTarget="DataValue" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Margin='0,0,0,10';Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};OnClick={Action CloseDialog()};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF}}" ObjectName="OK" />
                <TemplateInstruction TemplateName="ResultButtons" TemplateTarget="FieldPane" Parameters="{ParameterValues IsStretched='True';HorizontalAlignment='Center'}" />
              </Instructions>
            </RouteItemLayoutInstructions>
          </InstanceLayoutInstructions>
          <CustomPageTemplates>
            <CustomPageTemplate PageIndex="0">
              <Template>
                <Items>
                  <Grid Name="backgroundGrid" Background="{Style Background}" Width="Stretch" Height="Stretch">
                    <ExpressionReferences>
                      <StateExpressionReference />
                      <DatamodelExpressionReference />
                      <ServerVariablesExpressionReference />
                      <ClientFeaturesExpressionReference />
                      <TextProviderExpressionReference />
                      <UserExpressionReference />
                      <PageExpressionReference />
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxIDone</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAutoSizeBtns</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxImageName</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_EN</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_NL</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                    </ExpressionReferences>
                    <Columns>
                      <Column Width="*" />
                    </Columns>
                    <Rows>
                      <Row Height="*" />
                    </Rows>
                    <Children>
                      <Grid Name="mainGrid" Background="#FFF0F0F0" Margin="{Style MainGridMargin}" Width="Stretch" Height="Stretch">
                        <Columns>
                          <Column Width="*" />
                        </Columns>
                        <Rows>
                          <Row Height="Auto" />
                          <Row Height="Auto" />
                          <Row />
                          <Row Height="*" />
                          <Row />
                        </Rows>
                        <Children>
                          <Grid Name="headerGrid" Background="{Style Background}" Width="Stretch">
                            <Columns>
                              <Column Width="*" />
                            </Columns>
                            <Rows>
                              <Row Height="Auto" />
                            </Rows>
                            <Children>
                              <Panel Name="headerPanel" Background="{Style TitleAreaBackground}" Margin="{Style HeaderMargin}" Width="Stretch" CornerRadius="{Style HeaderCornerRadius}">
                                <Grid Name="titleAreaGrid" Margin="5" Width="Stretch" BorderColor="#FFE6E6FA">
                                  <Columns>
                                    <Column Width="Auto" />
                                    <Column Width="*" />
                                    <Column Width="Auto" />
                                  </Columns>
                                  <Rows>
                                    <Row Height="Auto" />
                                  </Rows>
                                  <Children>
                                    <ImageControl Name="companyLogo" Margin="2" ScreenReaderText="Company logo" Source="Logo" ScreenReaderTextSource="Literal" TabIndex="-1">
                                      <ScreenReaderRichTextDefinition>
                                        <RunElements />
                                      </ScreenReaderRichTextDefinition>
                                    </ImageControl>
                                    <ParallelsArea Name="parallelsArea1" ColumnIndex="1" DesignHeight="42">
                                      <DefaultTemplates>
                                        <TemplateReference Name="DialogHeader" Kind="Parallel" />
                                      </DefaultTemplates>
                                    </ParallelsArea>
                                  </Children>
                                </Grid>
                              </Panel>
                            </Children>
                          </Grid>
                          <Grid Name="menuBarGrid" RowIndex="1" Width="Stretch" Comment="Available area for e.g. extra information, showing errors or a menubar. Can be removed if not used." BorderColor="#FFE6E6FA">
                            <Columns>
                              <Column Width="*" />
                            </Columns>
                            <Children>
                              <Panel Name="panel2" Width="Stretch" />
                            </Children>
                          </Grid>
                          <Grid Name="instructionGrid" RowIndex="2" Visibility="Collapsed" Margin="5" Width="Stretch" BorderWidth="0,0,0,1">
                            <Children>
                              <Label Name="instruction" Margin="2" />
                            </Children>
                          </Grid>
                          <Panel Name="contentAreaPanel" RowIndex="3" Width="Stretch" Height="Stretch" Comment="To allow for vertical scrolling when questions don't fit on the page. Make sure all children are Auto height.&#xD;&#xA;">
                            <Grid Name="contentGrid" Margin="{Style ContentAreaMargin}" Width="Stretch" Height="Stretch">
                              <Columns>
                                <Column Width="*" />
                              </Columns>
                              <Rows>
                                <Row Height="*" />
                                <Row Height="Auto" />
                                <Row />
                              </Rows>
                              <Children>
                                <Panel Name="panel1" Width="Stretch" Height="Stretch" BorderWidth="1" VerticalScrollBar="Auto">
                                  <ImageControl Name="imageControl1" Width="Stretch" Height="Stretch" SourceUrl="{Expression auxImageName.StringValue}" Stretch="Stretch" />
                                </Panel>
                                <FieldPaneInstanceArea Name="auxIDoneFieldPaneArea" RowIndex="2" DesignWidth="730" DesignHeight="250" FieldName="dShowImage.auxIDone">
                                  <DefaultTemplates>
                                    <TemplateReference Name="InputWithActionButton" Kind="FieldPane" Parameters="{ParameterValues ActionButtonVisibility='Collapsed'}" />
                                    <TemplateReference Name="OnlyInput" Kind="FieldPane" />
                                    <TemplateReference Name="ResultButtons" Kind="FieldPane" />
                                    <TemplateReference Name="Vertical" Kind="FieldPane" Parameters="{ParameterValues Width='Stretch';IsStretched='False'}" />
                                  </DefaultTemplates>
                                </FieldPaneInstanceArea>
                              </Children>
                            </Grid>
                          </Panel>
                          <Grid Name="footNoteGrid" RowIndex="4" Visibility="Collapsed" Margin="5" Width="Stretch" BorderWidth="0,1,0,0">
                            <Children>
                              <Label Name="footNote" Margin="2" />
                            </Children>
                          </Grid>
                        </Children>
                      </Grid>
                    </Children>
                  </Grid>
                </Items>
              </Template>
            </CustomPageTemplate>
          </CustomPageTemplates>
          <IsGeneric>false</IsGeneric>
        </Parallel>
        <Parallel Name="dAttempts" DialogHeight="550" DialogWidth="1000" InitialWindowState="Maximized">
          <InstanceLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dAttempts.DS_mAttempts">
              <Instructions>
                <TemplateInstruction TemplateName="DataView" TemplateTarget="ResponseValue" Parameters="{ParameterValues OnRecordSelected={Action ProcedureCall({Expression UpdateAttemptsScreen()})};HeaderRoleName='Question';HeaderTextSource='TextOrName'}" />
                <TemplateInstruction TemplateName="Vertical" TemplateTarget="FieldPane" Parameters="{ParameterValues Height='Stretch';HeightStretched='True'}" PlaceholderName="DS_mAttemptsFieldPaneArea" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dAttempts.btnAttempts">
              <Instructions>
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression EditNote()})};IsEnabled={Expression NOT (auxLast.IntegerValue &lt;&gt; 1 OR auxLocked.Integervalue = 1)};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Visibility={Expression IF auxDoNotAllowUpdateAttemptNote.AnswerStatus &lt;&gt; Empty THEN 'Collapsed' ELSE 'Visible' ENDIF}}" ObjectName="Cancel_Modify" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action AssignField('dAttempts.btnAttempts', '2', '');CloseDialog()};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};IsEnabled='True';Text='&lt;img src=BackButton2&gt;';Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF}}" ObjectName="Quit" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues IsEnabled={Expression auxLocked.AnswerStatus = Empty OR auxLocked.IntegerValue = 0};OnClick={Action ProcedureCall({Expression AddAttempt(0, 0, '')})};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Text={Expression IF auxLocked.IntegerValue &lt;&gt; 1 THEN Category.GetRoleText('Category') ELSE Category.GetRoleText('Disabled') ENDIF};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Visibility={Expression IF auxDoNotAllowManualAttempt.AnswerStatus = empty THEN 'Visible' ELSE 'Collapsed' ENDIF}}" ObjectName="Cancel_Add" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF}}" ObjectName="" />
                <TemplateInstruction TemplateName="DialogButtons" TemplateTarget="DataValue" Parameters="{ParameterValues Margin='0'}" />
                <TemplateInstruction TemplateName="ResultButtons" TemplateTarget="FieldPane" Parameters="{ParameterValues Margin='0,5,0,0';IsStretched='True';HorizontalAlignment='Center'}" PlaceholderName="btnAttemptsFieldPaneArea" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues OnClick={Action ProcedureCall({Expression ViewInterview()})};IsEnabled={Expression auxHasInterview.AnswerStatus &lt;&gt; Empty};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Visibility={Expression IF auxAllowView.AnswerStatus &lt;&gt; Empty THEN 'Visible' ELSE 'Collapsed' ENDIF}}" ObjectName="Cancel_View" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dAttempts.auxNote">
              <Instructions>
                <TemplateInstruction TemplateName="SingleResponseValue" TemplateTarget="DataValue" Parameters="{ParameterValues IsStretched='True'}" />
                <TemplateInstruction TemplateName="InputWithActionButton" TemplateTarget="FieldPane" Parameters="{ParameterValues IsStretched='True'}" />
                <TemplateInstruction TemplateName="StringTextBox" TemplateTarget="ResponseValue" Parameters="{ParameterValues OnValueChanged='';Margin='3,0,0,0';Height='Auto';IsEnabled='True'}" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dAttempts.auxWhen">
              <Instructions>
                <TemplateInstruction TemplateName="StringTextBox" TemplateTarget="ResponseValue" Parameters="{ParameterValues Margin='3,0,0,0'}" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dAttempts.auxApptTime">
              <Instructions>
                <TemplateInstruction TemplateName="StringTextBox" TemplateTarget="ResponseValue" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dAttempts.auxApptDate">
              <Instructions>
                <TemplateInstruction TemplateName="StringTextBox" TemplateTarget="ResponseValue" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dAttempts.auxHappeningsStr">
              <Instructions>
                <TemplateInstruction TemplateName="InputWithActionButton" TemplateTarget="FieldPane" Parameters="{ParameterValues ActionButtonVisibility='Collapsed'}" PlaceholderName="dAttempts_auxHappeningsStr1" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dAttempts.auxAttemptsDetails">
              <Instructions>
                <TemplateInstruction TemplateName="QuestionTextOnly" TemplateTarget="FieldPane" PlaceholderName="dAttempts_auxAttemptsDetails1" />
              </Instructions>
            </RouteItemLayoutInstructions>
          </InstanceLayoutInstructions>
          <CustomPageTemplates>
            <CustomPageTemplate PageIndex="0">
              <Template DesignWidth="1000" DesignHeight="550">
                <Items>
                  <Grid Name="backgroundGrid" Background="{Style Background}" Width="Stretch" Height="Stretch">
                    <ExpressionReferences>
                      <StateExpressionReference />
                      <DatamodelExpressionReference />
                      <ServerVariablesExpressionReference />
                      <ClientFeaturesExpressionReference />
                      <TextProviderExpressionReference />
                      <PageExpressionReference />
                      <MappedFieldExpressionReference>
                        <ReferenceName>DS_mAttempts</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAttemptsDetails</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>btnAttempts</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxLast</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxWhen</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxHappeningsStr</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxApptDate</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxApptTime</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxNote</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxLocked</ReferenceName>
                        <FieldType>Integer</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxHasInterview</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAllowView</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxReadOnlySettingsName</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDoNotAllowManualAttempt</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxDoNotAllowUpdateAttemptNote</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAutoSizeBtns</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAttemptsDetailsTable</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxCustomDetailsTable</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_EN</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                    </ExpressionReferences>
                    <Columns>
                      <Column Width="*" />
                    </Columns>
                    <Rows>
                      <Row Height="*" />
                    </Rows>
                    <Children>
                      <Grid Name="mainGrid" Background="#FFF0F0F0" Margin="{Style MainGridMargin}" Width="Stretch" Height="Stretch">
                        <Columns>
                          <Column Width="*" />
                        </Columns>
                        <Rows>
                          <Row Height="Auto" />
                          <Row Height="Auto" />
                          <Row Height="Auto" />
                          <Row Height="*" />
                          <Row />
                        </Rows>
                        <Children>
                          <Grid Name="headerGrid" Background="{Style Background}" Width="Stretch">
                            <Columns>
                              <Column Width="*" />
                            </Columns>
                            <Rows>
                              <Row Height="Auto" />
                            </Rows>
                            <Children>
                              <Panel Name="headerPanel" Background="{Style TitleAreaBackground}" Margin="{Style HeaderMargin}" Width="Stretch" CornerRadius="{Style HeaderCornerRadius}">
                                <Grid Name="titleAreaGrid" Margin="5" Width="Stretch" BorderColor="#FFE6E6FA">
                                  <Columns>
                                    <Column Width="Auto" />
                                    <Column Width="*" />
                                    <Column Width="Auto" />
                                  </Columns>
                                  <Rows>
                                    <Row Height="Auto" />
                                  </Rows>
                                  <Children>
                                    <ImageControl Name="companyLogo" Margin="2" ScreenReaderText="Company logo" Source="Logo" ScreenReaderTextSource="Literal" TabIndex="-1">
                                      <ScreenReaderRichTextDefinition>
                                        <RunElements />
                                      </ScreenReaderRichTextDefinition>
                                    </ImageControl>
                                    <ParallelsArea Name="parallelsArea1" ColumnIndex="1" DesignHeight="42">
                                      <DefaultTemplates>
                                        <TemplateReference Name="DialogHeader" Kind="Parallel" />
                                      </DefaultTemplates>
                                    </ParallelsArea>
                                  </Children>
                                </Grid>
                              </Panel>
                            </Children>
                          </Grid>
                          <Grid Name="menuBarGrid" RowIndex="1" Width="Stretch" Comment="Available area for e.g. extra information, showing errors or a menubar. Can be removed if not used." BorderColor="#FFE6E6FA">
                            <Columns>
                              <Column Width="*" />
                            </Columns>
                          </Grid>
                          <Grid Name="instructionGrid" RowIndex="2" Visibility="Collapsed" Margin="5" Width="Stretch" BorderWidth="0,0,0,1">
                            <Children>
                              <Label Name="instruction" Margin="2" />
                            </Children>
                          </Grid>
                          <Panel Name="contentAreaPanel" RowIndex="3" Width="Stretch" Height="Stretch" Comment="To allow for vertical scrolling when questions don't fit on the page. Make sure all children are Auto height.&#xD;&#xA;">
                            <Grid Name="contentGrid" Margin="5" Width="Stretch" Height="Stretch">
                              <Columns>
                                <Column Width="*" />
                              </Columns>
                              <Rows>
                                <Row Height="2*" />
                                <Row Height="*" />
                                <Row />
                              </Rows>
                              <Children>
                                <FieldPaneInstanceArea Name="DS_mAttemptsFieldPaneArea" DesignWidth="730" DesignHeight="250" FieldName="dAttempts.DS_mAttempts">
                                  <DefaultTemplates>
                                    <TemplateReference Name="InputWithActionButton" Kind="FieldPane" Parameters="{ParameterValues ActionButtonVisibility='Collapsed'}" />
                                    <TemplateReference Name="OnlyInput" Kind="FieldPane" />
                                    <TemplateReference Name="ResultButtons" Kind="FieldPane" />
                                    <TemplateReference Name="Vertical" Kind="FieldPane" Parameters="{ParameterValues Width='Stretch'}" />
                                  </DefaultTemplates>
                                </FieldPaneInstanceArea>
                                <Panel Name="panel1" RowIndex="1" Width="Stretch" Height="Stretch" VerticalScrollBar="Auto">
                                  <FieldPaneInstanceArea Name="dAttempts_auxAttemptsDetails1" DesignHeight="100" FieldName="dAttempts.auxAttemptsDetails" />
                                </Panel>
                                <FieldPaneInstanceArea Name="btnAttemptsFieldPaneArea" RowIndex="2" DesignWidth="730" DesignHeight="250" FieldName="dAttempts.btnAttempts">
                                  <DefaultTemplates>
                                    <TemplateReference Name="InputWithActionButton" Kind="FieldPane" Parameters="{ParameterValues ActionButtonVisibility='Collapsed'}" />
                                    <TemplateReference Name="OnlyInput" Kind="FieldPane" />
                                    <TemplateReference Name="ResultButtons" Kind="FieldPane" />
                                    <TemplateReference Name="Vertical" Kind="FieldPane" Parameters="{ParameterValues Width='Stretch'}" />
                                  </DefaultTemplates>
                                </FieldPaneInstanceArea>
                              </Children>
                            </Grid>
                          </Panel>
                          <Grid Name="footNoteGrid" RowIndex="4" Visibility="Collapsed" Margin="5" Width="Stretch" BorderWidth="0,1,0,0">
                            <Children>
                              <Label Name="footNote" Margin="2" />
                            </Children>
                          </Grid>
                        </Children>
                      </Grid>
                    </Children>
                  </Grid>
                </Items>
              </Template>
            </CustomPageTemplate>
          </CustomPageTemplates>
          <IsGeneric>false</IsGeneric>
        </Parallel>
        <Parallel Name="dEditNote" DialogHeight="315">
          <InstanceLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dEditNote.btnEditNote">
              <Instructions>
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};OnClick={Action AssignField('dEditNote.btnEditNote', '1', '');CloseDialog()};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF}}" ObjectName="Save" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF};Margin='3';OnClick={Action AssignField('dEditNote.btnEditNote', '2', '');CloseDialog()};Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF}}" ObjectName="Cancel" />
                <TemplateInstruction TemplateName="ResultButtons" TemplateTarget="FieldPane" Parameters="{ParameterValues Margin='0';WizardLayout='False';IsStretched='True';HorizontalAlignment='Center'}" PlaceholderName="btnEditNoteFieldPaneArea" />
                <TemplateInstruction TemplateName="DialogButton" TemplateTarget="Category" Parameters="{ParameterValues Margin='3';Height={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonHeight}' ELSE 'Auto' ENDIF};Width={Expression IF auxAutoSizeBtns.AnswerStatus = Empty THEN '{Style CMAButtonWidth}' ELSE 'Auto' ENDIF}}" ObjectName="" />
              </Instructions>
            </RouteItemLayoutInstructions>
            <RouteItemLayoutInstructions RouteItemName="dEditNote.auxNote">
              <Instructions>
                <TemplateInstruction TemplateName="StringTextBox" TemplateTarget="ResponseValue" Parameters="{ParameterValues Height='150'}" />
              </Instructions>
            </RouteItemLayoutInstructions>
          </InstanceLayoutInstructions>
          <CustomPageTemplates>
            <CustomPageTemplate PageIndex="0">
              <Template DesignHeight="315">
                <Items>
                  <Grid Name="backgroundGrid" Background="{Style Background}" Width="Stretch" Height="Stretch">
                    <ExpressionReferences>
                      <StateExpressionReference />
                      <DatamodelExpressionReference />
                      <ServerVariablesExpressionReference />
                      <ClientFeaturesExpressionReference />
                      <TextProviderExpressionReference />
                      <UserExpressionReference />
                      <PageExpressionReference />
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxNote</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>btnEditNote</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>auxAutoSizeBtns</ReferenceName>
                        <FieldType>Enumeration</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_EN</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                      <MappedFieldExpressionReference>
                        <ReferenceName>DialogTitle_NL</ReferenceName>
                        <FieldType>String</FieldType>
                      </MappedFieldExpressionReference>
                    </ExpressionReferences>
                    <Columns>
                      <Column Width="*" />
                    </Columns>
                    <Rows>
                      <Row Height="*" />
                    </Rows>
                    <Children>
                      <Grid Name="mainGrid" Background="#FFF0F0F0" Margin="{Style MainGridMargin}" Width="Stretch" Height="Stretch">
                        <Columns>
                          <Column Width="*" />
                        </Columns>
                        <Rows>
                          <Row Height="Auto" />
                          <Row Height="*" />
                        </Rows>
                        <Children>
                          <Grid Name="headerGrid" Background="{Style Background}" Width="Stretch">
                            <Columns>
                              <Column Width="*" />
                            </Columns>
                            <Rows>
                              <Row Height="Auto" />
                            </Rows>
                            <Children>
                              <Panel Name="headerPanel" Background="{Style TitleAreaBackground}" Margin="{Style HeaderMargin}" Width="Stretch" CornerRadius="{Style HeaderCornerRadius}">
                                <Grid Name="titleAreaGrid" Margin="5" Width="Stretch" BorderColor="#FFE6E6FA">
                                  <Columns>
                                    <Column Width="Auto" />
                                    <Column Width="*" />
                                    <Column Width="Auto" />
                                  </Columns>
                                  <Rows>
                                    <Row Height="Auto" />
                                  </Rows>
                                  <Children>
                                    <ImageControl Name="companyLogo" Margin="2" ScreenReaderText="Company logo" Source="Logo" ScreenReaderTextSource="Literal" TabIndex="-1">
                                      <ScreenReaderRichTextDefinition>
                                        <RunElements />
                                      </ScreenReaderRichTextDefinition>
                                    </ImageControl>
                                    <ParallelsArea Name="parallelsArea1" ColumnIndex="1" DesignHeight="42">
                                      <DefaultTemplates>
                                        <TemplateReference Name="DialogHeader" Kind="Parallel" />
                                      </DefaultTemplates>
                                    </ParallelsArea>
                                  </Children>
                                </Grid>
                              </Panel>
                            </Children>
                          </Grid>
                          <Panel Name="contentAreaPanel" RowIndex="1" Width="Stretch" Height="Stretch" Comment="To allow for vertical scrolling when questions don't fit on the page. Make sure all children are Auto height.&#xD;&#xA;" VerticalScrollBar="Auto">
                            <Grid Name="contentGrid" Margin="5" Width="Stretch">
                              <Columns>
                                <Column Width="*" />
                              </Columns>
                              <Rows>
                                <Row Height="Auto" />
                                <Row />
                              </Rows>
                              <Children>
                                <FieldPaneInstanceArea Name="auxNoteFieldPaneArea" DesignWidth="730" DesignHeight="250" FieldName="dEditNote.auxNote">
                                  <DefaultTemplates>
                                    <TemplateReference Name="InputWithActionButton" Kind="FieldPane" Parameters="{ParameterValues ActionButtonVisibility='Collapsed'}" />
                                    <TemplateReference Name="OnlyInput" Kind="FieldPane" />
                                    <TemplateReference Name="ResultButtons" Kind="FieldPane" />
                                    <TemplateReference Name="Vertical" Kind="FieldPane" Parameters="{ParameterValues Width='Stretch';IsStretched='False'}" />
                                  </DefaultTemplates>
                                </FieldPaneInstanceArea>
                                <FieldPaneInstanceArea Name="btnEditNoteFieldPaneArea" RowIndex="1" DesignWidth="730" DesignHeight="250" FieldName="dEditNote.btnEditNote">
                                  <DefaultTemplates>
                                    <TemplateReference Name="InputWithActionButton" Kind="FieldPane" Parameters="{ParameterValues ActionButtonVisibility='Collapsed'}" />
                                    <TemplateReference Name="OnlyInput" Kind="FieldPane" />
                                    <TemplateReference Name="ResultButtons" Kind="FieldPane" />
                                    <TemplateReference Name="Vertical" Kind="FieldPane" Parameters="{ParameterValues Width='Stretch';IsStretched='False'}" />
                                  </DefaultTemplates>
                                </FieldPaneInstanceArea>
                              </Children>
                            </Grid>
                          </Panel>
                        </Children>
                      </Grid>
                    </Children>
                  </Grid>
                </Items>
              </Template>
            </CustomPageTemplate>
          </CustomPageTemplates>
          <IsGeneric>false</IsGeneric>
        </Parallel>
        <Parallel Name="Confirm">
          <IsGeneric>false</IsGeneric>
        </Parallel>
        <Parallel Name="Display">
          <IsGeneric>false</IsGeneric>
        </Parallel>
        <Parallel Name="Process">
          <IsGeneric>false</IsGeneric>
        </Parallel>
      </Parallels>
    </LayoutSet>
  </LayoutSets>
  <LayoutSetGroups>
    <LayoutSetGroup Name="Dialogs" DataEntrySettingsName="FreeInterviewing">
      <LayoutSetNames>
        <string>Dialogs1</string>
      </LayoutSetNames>
    </LayoutSetGroup>
  </LayoutSetGroups>
  <RoleReferences>
    <RoleReference Name="Help" />
    <RoleReference Name="Watermark" />
    <RoleReference Name="ToolTip" MappedTextRole="ToolTip" />
    <RoleReference Name="SpecialAnswer" />
    <RoleReference Name="CategoryGroup" />
    <RoleReference Name="EditMask" />
    <RoleReference Name="Disabled" MappedTextRole="Disabled" />
  </RoleReferences>
  <TypeReferences>
    <TypeReference Name="THeader" />
    <TypeReference Name="TCurrency" />
  </TypeReferences>
  <LayoutSpecFieldReferences xmlns="layoutspec">
    <LayoutSpecFieldReference Name="RespondentTimeZone" />
    <LayoutSpecFieldReference Name="RespondentTime" />
    <LayoutSpecFieldReference Name="MainSurveyName" />
    <LayoutSpecFieldReference Name="InstrumentID" />
    <LayoutSpecFieldReference Name="InterviewerID" />
    <LayoutSpecFieldReference Name="CaseID" />
    <LayoutSpecFieldReference Name="SomeSetField" />
  </LayoutSpecFieldReferences>
  <FunctionDeclarations>
    <FunctionDeclaration Name="Sync" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UpdateSync_msg" Source="ManipulaSetup" />
    <FunctionDeclaration Name="InstallNeededSurveys" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RemoveNotUsedSurveys" Source="ManipulaSetup" />
    <FunctionDeclaration Name="StartInterview" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UpdateCasesScreen" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleEverything" Source="ManipulaSetup" />
    <FunctionDeclaration Name="InitCases" Source="ManipulaSetup" />
    <FunctionDeclaration Name="InitSync_msg" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UpdateAttemptsScreen" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ProcessAttemptsAndStartDialog" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ProcessCasesAndStartDialog" Source="ManipulaSetup" />
    <FunctionDeclaration Name="AddAttempt" Source="ManipulaSetup" />
    <FunctionDeclaration Name="AddAttemptToList" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ProcessAttempts" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UpdateCaseEntry" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UpdateTemporaryCasesFile" Source="ManipulaSetup" />
    <FunctionDeclaration Name="FillSurveyNamesArray" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleChange" Source="ManipulaSetup" />
    <FunctionDeclaration Name="Initialisation" Source="ManipulaSetup" />
    <FunctionDeclaration Name="Translate" Source="ManipulaSetup" />
    <FunctionDeclaration Name="WriteSettings" Source="ManipulaSetup" />
    <FunctionDeclaration Name="AddToLog" Source="ManipulaSetup" />
    <FunctionDeclaration Name="DisplayOnScreen" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UpdateSurveys" Source="ManipulaSetup" />
    <FunctionDeclaration Name="DownloadCaseData" Source="ManipulaSetup" />
    <FunctionDeclaration Name="AutoSync" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ShowLog" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UploadLogging" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleAdditionalDownloads" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RegisterDownloadCheckNeeded" Source="ManipulaSetup" />
    <FunctionDeclaration Name="SpawnCase" Source="ManipulaSetup" />
    <FunctionDeclaration Name="EraseLog" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ClearFilter" Source="ManipulaSetup" />
    <FunctionDeclaration Name="AddAttemptsForUpload" Source="ManipulaSetup" />
    <FunctionDeclaration Name="DeleteCaseData" Source="ManipulaSetup" />
    <FunctionDeclaration Name="EraseMessageFile" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleAdditionalDeletes" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleAdditionalUploads" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleAttemptsUpload" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RegisterDeleteCheckNeeded" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RegisterUpload" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RegisterUploadCheckNeeded" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RestoreAttemptsFromCase" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UploadCaseData" Source="ManipulaSetup" />
    <FunctionDeclaration Name="StoreAttemptsInLocalCaseAndWrite" Source="ManipulaSetup" />
    <FunctionDeclaration Name="EditNote" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RefreshLocalDatabase" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RefreshLocalDatabases" Source="ManipulaSetup" />
    <FunctionDeclaration Name="LoadTemplate" Source="ManipulaSetup" />
    <FunctionDeclaration Name="LoopDataFieldsDefinitionOrder" Source="ManipulaSetup" />
    <FunctionDeclaration Name="PopulateValues" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ProcessOneDatafield" Source="ManipulaSetup" />
    <FunctionDeclaration Name="WriteField" Source="ManipulaSetup" />
    <FunctionDeclaration Name="InitTemporaryCaseFromLocalDatabase" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ShowImage" Source="ManipulaSetup" />
    <FunctionDeclaration Name="StoreImageOnDisk" Source="ManipulaSetup" />
    <FunctionDeclaration Name="SwitchAttemptsSurveyIfNeeded" Source="ManipulaSetup" />
    <FunctionDeclaration Name="GetSurveySettings" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleDependencies" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RunAtEndSetup" Source="ManipulaSetup" />
    <FunctionDeclaration Name="GetSurveySettingsForGUID" Source="ManipulaSetup" />
    <FunctionDeclaration Name="DetermineGroupStatus" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RegisterSurvey" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RemoveFromSurveysList" Source="ManipulaSetup" />
    <FunctionDeclaration Name="SwitchToGroupView" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ChangeStyle" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleGroupStatusUpdates" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ViewInterview" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ImportSettingsFromInstallation" Source="ManipulaSetup" />
    <FunctionDeclaration Name="InstallDependency" Source="ManipulaSetup" />
    <FunctionDeclaration Name="CheckForMissingSurveyData" Source="ManipulaSetup" />
    <FunctionDeclaration Name="GeoButtonClick" Source="ManipulaSetup" />
    <FunctionDeclaration Name="FillCustomColls" Source="ManipulaSetup" />
    <FunctionDeclaration Name="PrepareSort" Source="ManipulaSetup" />
    <FunctionDeclaration Name="SortCases" Source="ManipulaSetup" />
    <FunctionDeclaration Name="SortCasesGrp" Source="ManipulaSetup" />
    <FunctionDeclaration Name="PositionOnCurrentRecord" Source="ManipulaSetup" />
    <FunctionDeclaration Name="LoadAttemptsTemplate" Source="ManipulaSetup" />
    <FunctionDeclaration Name="QuitCMA" Source="ManipulaSetup" />
    <FunctionDeclaration Name="DetermineCustomFilterValues" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleCustomFilterChange" Source="ManipulaSetup" />
    <FunctionDeclaration Name="StartInterviewAfterSpawn" Source="ManipulaSetup" />
    <FunctionDeclaration Name="StartInterviewEx" Source="ManipulaSetup" />
    <FunctionDeclaration Name="AddAttemptsFromGroupCasesScreen" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UpdateUploadTimesInCases" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ComputeEnableGroupDone" Source="ManipulaSetup" />
    <FunctionDeclaration Name="SetGroupDone" Source="ManipulaSetup" />
    <FunctionDeclaration Name="SearchButtonClick" Source="ManipulaSetup" />
    <FunctionDeclaration Name="InitNewTemporaryCaseFromLocalDatabase" Source="ManipulaSetup" />
    <FunctionDeclaration Name="SurveyListChange" Source="ManipulaSetup" />
    <FunctionDeclaration Name="TimerHandleChange" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ClearFilterButtonClick" Source="ManipulaSetup" />
    <FunctionDeclaration Name="WhatCasesToShowClick" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ProcessMappings_Get" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RefreshDependenciesList" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleGroupTransfer" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RefreshSurveyData" Source="ManipulaSetup" />
    <FunctionDeclaration Name="CopyLog" Source="ManipulaSetup" />
    <FunctionDeclaration Name="StartSetup" Source="ManipulaSetup" />
    <FunctionDeclaration Name="DisplayInterviewNotAllowed" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UpdateProcessDataAfterInterview" Source="ManipulaSetup" />
    <FunctionDeclaration Name="WriteTempCaseAndUpdateCache" Source="ManipulaSetup" />
    <FunctionDeclaration Name="MenuItemClick" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ComputePortraitHeader" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UpdateNotActiveSurveys" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleGroupClose" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleGroupRelease" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleGroupReopen" Source="ManipulaSetup" />
    <FunctionDeclaration Name="HandleSynchronization" Source="ManipulaSetup" />
    <FunctionDeclaration Name="ufServerCases_Write" Source="ManipulaSetup" />
    <FunctionDeclaration Name="WriteSyncTraceDown" Source="ManipulaSetup" />
    <FunctionDeclaration Name="WriteSyncTraceTopicDown" Source="ManipulaSetup" />
    <FunctionDeclaration Name="WriteSyncTraceTopicUp" Source="ManipulaSetup" />
    <FunctionDeclaration Name="WriteSyncTraceUp" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RegisterUploadFailedInTrace" Source="ManipulaSetup" />
    <FunctionDeclaration Name="RunAtSyncSetups" Source="ManipulaSetup" />
    <FunctionDeclaration Name="WriteSyncTraceFileToDisk" Source="ManipulaSetup" />
    <FunctionDeclaration Name="UpdateSurveysDuringSync" Source="ManipulaSetup" />
    <FunctionDeclaration Name="WriteLocalCaseAndFlush" Source="ManipulaSetup" />
  </FunctionDeclarations>
  <DataSources>
    <DataSource ID="mCases" DataName="tMainCase" SourceKind="ManipulaFile" ReturnField="TheSortValue" ReturnType="String" KeyNames="secSort" FieldFilter="TheSortValue,tContactInfoShort,tSurveyName,tCaseStatus,tGroupStatus,tStatus,tAttemptsCount,tLastResult,tAppointment,tGeoLocation,tIdentifier,tStartDate,tEndDate,tSpawnCount,tGroupID,tLastAttempt,tCaseNote,tCustomUse,tGroupSort,tCustomCol1,tCustomCol2,tCustomCol3,tCustomCol4,tCustomCol5,tCustomCol6,tCustomCol7,tCustomCol8,tCustomCol9,tCustomCol10" />
    <DataSource ID="mAttempts" DataName="tAttempt" SourceKind="ManipulaFile" ReturnField="atMainSurveyID" ReturnType="String" KeyNames="primary" FieldFilter="SeqNr,When,HappeningsStr,atAppointment" />
    <DataSource ID="mLogging" DataName="iLog" SourceKind="ManipulaFile" ReturnField="LogWhen" ReturnType="String" FieldFilter="LogWhen,LogText" />
    <DataSource ID="gCases" DataName="tGroupCase" SourceKind="ManipulaFile" ReturnField="TheSortValue" ReturnType="String" KeyNames="secSort" FieldFilter="TheSortValue,tContactInfoShort,tSurveyName,tCaseStatus,tGroupStatus,tStatus,tAttemptsCount,tLastResult,tAppointment,tGeoLocation,tIdentifier,tStartDate,tEndDate,tSpawnCount,tGroupID,tLastAttempt,tCaseNote,tCustomUse,tGroupSort,tCustomCol1,tCustomCol2,tCustomCol3,tCustomCol4,tCustomCol5,tCustomCol6,tCustomCol7,tCustomCol8,tCustomCol9,tCustomCol10" />
  </DataSources>
</LayoutSpecification>